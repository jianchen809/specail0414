2020-03-25 09:58:26,960 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-25 09:58:29,376 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-25 09:58:29,376 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-25 09:58:29,377 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-25 09:58:29,377 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-25 09:58:29,495 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-25 09:58:29,495 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-25 09:58:29,495 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-25 09:58:29,495 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-25 09:58:29,586 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-25 09:58:29,587 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-25 09:58:29,587 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-25 09:58:29,587 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-25 09:58:29,714 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-25 09:58:29,827 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-25 09:58:29,931 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-25 09:58:30,047 -- [test_register.py-->line:52] - ERROR: 用例--注册成功-带注册名--执行未通过
2020-03-25 09:58:30,047 -- [test_register.py-->line:53] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-25 09:58:30,047 -- [test_register.py-->line:54] - DEBUG: 实际结果：{'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-25 09:58:30,047 -- [test_register.py-->line:55] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_register.py", line 48, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-25 09:58:30,172 -- [test_register.py-->line:52] - ERROR: 用例--成功-不带用户名--执行未通过
2020-03-25 09:58:30,173 -- [test_register.py-->line:53] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-25 09:58:30,173 -- [test_register.py-->line:54] - DEBUG: 实际结果：{'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-25 09:58:30,173 -- [test_register.py-->line:55] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_register.py", line 48, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-25 09:58:30,261 -- [test_register.py-->line:60] - INFO: 用例--不输入手机号--执行通过
2020-03-25 09:58:30,349 -- [test_register.py-->line:60] - INFO: 用例--手机号长度10位--执行通过
2020-03-25 09:58:30,474 -- [test_register.py-->line:60] - INFO: 用例--手机号长度12位--执行通过
2020-03-25 09:58:30,582 -- [test_register.py-->line:60] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-25 09:58:30,710 -- [test_register.py-->line:60] - INFO: 用例--已注册过的手机号--执行通过
2020-03-25 09:58:30,855 -- [test_register.py-->line:60] - INFO: 用例--密码7位--执行通过
2020-03-25 09:58:30,940 -- [test_register.py-->line:60] - INFO: 用例--密码17位--执行通过
2020-03-25 09:58:31,041 -- [test_register.py-->line:60] - INFO: 用例--不输入密码--执行通过
2020-03-25 09:58:31,126 -- [test_register.py-->line:60] - INFO: 用例--注册名11位--执行通过
2020-03-25 09:58:31,230 -- [test_register.py-->line:60] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-25 09:58:31,356 -- [test_register.py-->line:52] - ERROR: 用例--不输入类型--执行未通过
2020-03-25 09:58:31,356 -- [test_register.py-->line:53] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-25 09:58:31,356 -- [test_register.py-->line:54] - DEBUG: 实际结果：{'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-25 09:58:31,357 -- [test_register.py-->line:55] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_register.py", line 48, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-25 09:58:31,443 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-26 21:26:06,491 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-26 21:26:10,419 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-26 21:26:10,419 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 21:26:10,420 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 21:26:10,420 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-26 21:26:10,793 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-26 21:26:10,793 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-26 21:26:10,793 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 21:26:10,793 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-26 21:26:11,223 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-26 21:26:11,223 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-26 21:26:11,223 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 21:26:11,223 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-26 21:26:11,681 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-26 21:26:12,073 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-26 21:26:12,456 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-26 21:26:12,745 -- [test_register.py-->line:68] - INFO: 用例--注册成功-带注册名--执行通过
2020-03-26 21:26:12,973 -- [test_register.py-->line:60] - ERROR: 用例--成功-不带用户名--执行未通过
2020-03-26 21:26:12,973 -- [test_register.py-->line:61] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 21:26:12,973 -- [test_register.py-->line:62] - DEBUG: 实际结果：0
2020-03-26 21:26:12,974 -- [test_register.py-->line:63] - ERROR: 1 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_register.py", line 57, in test_register
    self.assertEqual(1, res)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-03-26 21:26:13,151 -- [test_register.py-->line:68] - INFO: 用例--不输入手机号--执行通过
2020-03-26 21:26:13,341 -- [test_register.py-->line:68] - INFO: 用例--手机号长度10位--执行通过
2020-03-26 21:26:13,524 -- [test_register.py-->line:68] - INFO: 用例--手机号长度12位--执行通过
2020-03-26 21:26:13,887 -- [test_register.py-->line:68] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-26 21:26:14,265 -- [test_register.py-->line:68] - INFO: 用例--已注册过的手机号--执行通过
2020-03-26 21:26:14,622 -- [test_register.py-->line:68] - INFO: 用例--密码7位--执行通过
2020-03-26 21:26:14,971 -- [test_register.py-->line:68] - INFO: 用例--密码17位--执行通过
2020-03-26 21:26:15,135 -- [test_register.py-->line:68] - INFO: 用例--不输入密码--执行通过
2020-03-26 21:26:15,319 -- [test_register.py-->line:68] - INFO: 用例--注册名11位--执行通过
2020-03-26 21:26:15,462 -- [test_register.py-->line:68] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-26 21:26:15,705 -- [test_register.py-->line:60] - ERROR: 用例--不输入类型--执行未通过
2020-03-26 21:26:15,705 -- [test_register.py-->line:61] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 21:26:15,705 -- [test_register.py-->line:62] - DEBUG: 实际结果：0
2020-03-26 21:26:15,705 -- [test_register.py-->line:63] - ERROR: 1 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_register.py", line 57, in test_register
    self.assertEqual(1, res)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-03-26 21:26:15,857 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-26 21:34:23,872 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-26 21:34:26,821 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-26 21:34:26,821 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 21:34:26,821 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 21:34:26,821 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-26 21:34:26,985 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-26 21:34:26,985 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-26 21:34:26,985 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 21:34:26,985 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-26 21:34:27,160 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-26 21:34:27,161 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-26 21:34:27,161 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 21:34:27,162 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-26 21:34:27,338 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-26 21:34:27,559 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-26 21:34:27,735 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-26 21:34:28,021 -- [test_register.py-->line:68] - INFO: 用例--注册成功-带注册名--执行通过
2020-03-26 21:34:28,316 -- [test_register.py-->line:68] - INFO: 用例--成功-不带用户名--执行通过
2020-03-26 21:34:28,499 -- [test_register.py-->line:68] - INFO: 用例--不输入手机号--执行通过
2020-03-26 21:34:28,653 -- [test_register.py-->line:68] - INFO: 用例--手机号长度10位--执行通过
2020-03-26 21:34:28,842 -- [test_register.py-->line:68] - INFO: 用例--手机号长度12位--执行通过
2020-03-26 21:34:29,004 -- [test_register.py-->line:68] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-26 21:34:29,176 -- [test_register.py-->line:68] - INFO: 用例--已注册过的手机号--执行通过
2020-03-26 21:34:29,340 -- [test_register.py-->line:68] - INFO: 用例--密码7位--执行通过
2020-03-26 21:34:29,523 -- [test_register.py-->line:68] - INFO: 用例--密码17位--执行通过
2020-03-26 21:34:29,700 -- [test_register.py-->line:68] - INFO: 用例--不输入密码--执行通过
2020-03-26 21:34:29,851 -- [test_register.py-->line:68] - INFO: 用例--注册名11位--执行通过
2020-03-26 21:34:30,025 -- [test_register.py-->line:68] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-26 21:34:30,200 -- [test_register.py-->line:60] - ERROR: 用例--不输入类型--执行未通过
2020-03-26 21:34:30,200 -- [test_register.py-->line:61] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 21:34:30,201 -- [test_register.py-->line:62] - DEBUG: 实际结果：{'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 21:34:30,201 -- [test_register.py-->line:63] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_register.py", line 51, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-26 21:34:30,315 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-26 22:01:22,939 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-26 22:01:26,194 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-26 22:01:26,195 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 22:01:26,195 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:01:26,196 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-26 22:01:26,366 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-26 22:01:26,366 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-26 22:01:26,366 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:01:26,366 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-26 22:01:26,502 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-26 22:01:26,502 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-26 22:01:26,502 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:01:26,502 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-26 22:01:26,636 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-26 22:01:26,768 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-26 22:01:26,938 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-26 22:01:27,123 -- [test_register.py-->line:68] - ERROR: 用例--注册成功-带注册名--执行未通过
2020-03-26 22:01:27,123 -- [test_register.py-->line:69] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 22:01:27,123 -- [test_register.py-->line:70] - DEBUG: 实际结果：{'code': 2, 'msg': '无效的手机格式', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:01:27,123 -- [test_register.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_register.py", line 58, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-26 22:01:27,313 -- [test_register.py-->line:68] - ERROR: 用例--成功-不带用户名--执行未通过
2020-03-26 22:01:27,313 -- [test_register.py-->line:69] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 22:01:27,313 -- [test_register.py-->line:70] - DEBUG: 实际结果：{'code': 2, 'msg': '无效的手机格式', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:01:27,314 -- [test_register.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_register.py", line 58, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-26 22:01:27,423 -- [test_register.py-->line:76] - INFO: 用例--不输入手机号--执行通过
2020-03-26 22:01:27,520 -- [test_register.py-->line:76] - INFO: 用例--手机号长度10位--执行通过
2020-03-26 22:01:27,632 -- [test_register.py-->line:76] - INFO: 用例--手机号长度12位--执行通过
2020-03-26 22:01:27,723 -- [test_register.py-->line:76] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-26 22:01:27,844 -- [test_register.py-->line:76] - INFO: 用例--已注册过的手机号--执行通过
2020-03-26 22:01:27,953 -- [test_register.py-->line:76] - INFO: 用例--密码7位--执行通过
2020-03-26 22:01:28,083 -- [test_register.py-->line:76] - INFO: 用例--密码17位--执行通过
2020-03-26 22:01:28,240 -- [test_register.py-->line:76] - INFO: 用例--不输入密码--执行通过
2020-03-26 22:01:28,360 -- [test_register.py-->line:76] - INFO: 用例--注册名11位--执行通过
2020-03-26 22:01:28,485 -- [test_register.py-->line:76] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-26 22:01:28,720 -- [test_register.py-->line:68] - ERROR: 用例--不输入类型--执行未通过
2020-03-26 22:01:28,720 -- [test_register.py-->line:69] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 22:01:28,721 -- [test_register.py-->line:70] - DEBUG: 实际结果：{'code': 2, 'msg': '无效的手机格式', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:01:28,721 -- [test_register.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_register.py", line 58, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-26 22:01:28,802 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-26 22:01:59,037 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-26 22:02:01,708 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-26 22:02:01,709 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 22:02:01,709 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:02:01,709 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-26 22:02:01,885 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-26 22:02:01,885 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-26 22:02:01,885 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:02:01,885 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-26 22:02:02,066 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-26 22:02:02,066 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-26 22:02:02,066 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:02:02,066 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-26 22:02:02,223 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-26 22:02:02,394 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-26 22:02:02,575 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-26 22:02:02,809 -- [test_register.py-->line:68] - ERROR: 用例--注册成功-带注册名--执行未通过
2020-03-26 22:02:02,809 -- [test_register.py-->line:69] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 22:02:02,810 -- [test_register.py-->line:70] - DEBUG: 实际结果：{'code': 2, 'msg': '无效的手机格式', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:02:02,810 -- [test_register.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_register.py", line 58, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-26 22:02:03,033 -- [test_register.py-->line:68] - ERROR: 用例--成功-不带用户名--执行未通过
2020-03-26 22:02:03,034 -- [test_register.py-->line:69] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 22:02:03,034 -- [test_register.py-->line:70] - DEBUG: 实际结果：{'code': 2, 'msg': '无效的手机格式', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:02:03,034 -- [test_register.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_register.py", line 58, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-26 22:02:03,220 -- [test_register.py-->line:76] - INFO: 用例--不输入手机号--执行通过
2020-03-26 22:02:03,450 -- [test_register.py-->line:76] - INFO: 用例--手机号长度10位--执行通过
2020-03-26 22:02:03,611 -- [test_register.py-->line:76] - INFO: 用例--手机号长度12位--执行通过
2020-03-26 22:02:03,752 -- [test_register.py-->line:76] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-26 22:02:03,898 -- [test_register.py-->line:76] - INFO: 用例--已注册过的手机号--执行通过
2020-03-26 22:02:04,055 -- [test_register.py-->line:76] - INFO: 用例--密码7位--执行通过
2020-03-26 22:02:04,219 -- [test_register.py-->line:76] - INFO: 用例--密码17位--执行通过
2020-03-26 22:02:04,388 -- [test_register.py-->line:76] - INFO: 用例--不输入密码--执行通过
2020-03-26 22:02:04,541 -- [test_register.py-->line:76] - INFO: 用例--注册名11位--执行通过
2020-03-26 22:02:04,700 -- [test_register.py-->line:76] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-26 22:02:04,944 -- [test_register.py-->line:68] - ERROR: 用例--不输入类型--执行未通过
2020-03-26 22:02:04,944 -- [test_register.py-->line:69] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 22:02:04,944 -- [test_register.py-->line:70] - DEBUG: 实际结果：{'code': 2, 'msg': '无效的手机格式', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:02:04,944 -- [test_register.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_register.py", line 58, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-26 22:02:05,069 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-26 22:03:30,557 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-26 22:03:33,261 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-26 22:03:33,261 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 22:03:33,261 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:03:33,261 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-26 22:03:33,417 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-26 22:03:33,418 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-26 22:03:33,418 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:03:33,419 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-26 22:03:33,610 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-26 22:03:33,610 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-26 22:03:33,610 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:03:33,610 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-26 22:03:33,784 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-26 22:03:34,056 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-26 22:03:34,230 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-26 22:03:34,496 -- [test_register.py-->line:68] - ERROR: 用例--注册成功-带注册名--执行未通过
2020-03-26 22:03:34,497 -- [test_register.py-->line:69] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 22:03:34,497 -- [test_register.py-->line:70] - DEBUG: 实际结果：{'code': 2, 'msg': '无效的手机格式', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:03:34,497 -- [test_register.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_register.py", line 58, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-26 22:03:34,718 -- [test_register.py-->line:68] - ERROR: 用例--成功-不带用户名--执行未通过
2020-03-26 22:03:34,718 -- [test_register.py-->line:69] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 22:03:34,718 -- [test_register.py-->line:70] - DEBUG: 实际结果：{'code': 2, 'msg': '无效的手机格式', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:03:34,719 -- [test_register.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_register.py", line 58, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-26 22:03:34,888 -- [test_register.py-->line:76] - INFO: 用例--不输入手机号--执行通过
2020-03-26 22:03:35,049 -- [test_register.py-->line:76] - INFO: 用例--手机号长度10位--执行通过
2020-03-26 22:03:35,219 -- [test_register.py-->line:76] - INFO: 用例--手机号长度12位--执行通过
2020-03-26 22:03:35,390 -- [test_register.py-->line:76] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-26 22:03:35,573 -- [test_register.py-->line:76] - INFO: 用例--已注册过的手机号--执行通过
2020-03-26 22:03:35,727 -- [test_register.py-->line:76] - INFO: 用例--密码7位--执行通过
2020-03-26 22:03:35,896 -- [test_register.py-->line:76] - INFO: 用例--密码17位--执行通过
2020-03-26 22:03:36,088 -- [test_register.py-->line:76] - INFO: 用例--不输入密码--执行通过
2020-03-26 22:03:36,252 -- [test_register.py-->line:76] - INFO: 用例--注册名11位--执行通过
2020-03-26 22:03:36,432 -- [test_register.py-->line:76] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-26 22:03:36,663 -- [test_register.py-->line:68] - ERROR: 用例--不输入类型--执行未通过
2020-03-26 22:03:36,664 -- [test_register.py-->line:69] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 22:03:36,664 -- [test_register.py-->line:70] - DEBUG: 实际结果：{'code': 2, 'msg': '无效的手机格式', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:03:36,664 -- [test_register.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_register.py", line 58, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-26 22:03:36,789 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-26 22:05:04,107 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-26 22:05:06,683 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-26 22:05:06,684 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 22:05:06,684 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:05:06,684 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-26 22:05:06,851 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-26 22:05:06,852 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-26 22:05:06,852 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:05:06,852 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-26 22:05:07,023 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-26 22:05:07,023 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-26 22:05:07,024 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:05:07,024 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-26 22:05:07,204 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-26 22:05:07,409 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-26 22:05:07,592 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-26 22:05:07,904 -- [test_register.py-->line:75] - INFO: 用例--注册成功-带注册名--执行通过
2020-03-26 22:05:08,249 -- [test_register.py-->line:75] - INFO: 用例--成功-不带用户名--执行通过
2020-03-26 22:05:08,392 -- [test_register.py-->line:75] - INFO: 用例--不输入手机号--执行通过
2020-03-26 22:05:08,554 -- [test_register.py-->line:75] - INFO: 用例--手机号长度10位--执行通过
2020-03-26 22:05:08,717 -- [test_register.py-->line:75] - INFO: 用例--手机号长度12位--执行通过
2020-03-26 22:05:08,899 -- [test_register.py-->line:75] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-26 22:05:09,166 -- [test_register.py-->line:75] - INFO: 用例--已注册过的手机号--执行通过
2020-03-26 22:05:09,410 -- [test_register.py-->line:75] - INFO: 用例--密码7位--执行通过
2020-03-26 22:05:09,577 -- [test_register.py-->line:75] - INFO: 用例--密码17位--执行通过
2020-03-26 22:05:09,776 -- [test_register.py-->line:75] - INFO: 用例--不输入密码--执行通过
2020-03-26 22:05:10,519 -- [test_register.py-->line:75] - INFO: 用例--注册名11位--执行通过
2020-03-26 22:05:10,688 -- [test_register.py-->line:75] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-26 22:05:11,024 -- [test_register.py-->line:75] - INFO: 用例--不输入类型--执行通过
2020-03-26 22:05:11,169 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-26 22:05:44,627 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-26 22:05:47,225 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-26 22:05:47,225 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-26 22:05:47,226 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:05:47,226 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-26 22:05:47,389 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-26 22:05:47,389 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-26 22:05:47,389 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:05:47,389 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-26 22:05:47,543 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-26 22:05:47,543 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-26 22:05:47,543 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-26 22:05:47,543 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-26 22:05:47,743 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-26 22:05:47,987 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-26 22:05:48,141 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-26 22:05:48,465 -- [test_register.py-->line:75] - INFO: 用例--注册成功-带注册名--执行通过
2020-03-26 22:05:48,816 -- [test_register.py-->line:75] - INFO: 用例--成功-不带用户名--执行通过
2020-03-26 22:05:48,981 -- [test_register.py-->line:75] - INFO: 用例--不输入手机号--执行通过
2020-03-26 22:05:49,150 -- [test_register.py-->line:75] - INFO: 用例--手机号长度10位--执行通过
2020-03-26 22:05:49,305 -- [test_register.py-->line:75] - INFO: 用例--手机号长度12位--执行通过
2020-03-26 22:05:49,487 -- [test_register.py-->line:75] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-26 22:05:49,695 -- [test_register.py-->line:75] - INFO: 用例--已注册过的手机号--执行通过
2020-03-26 22:05:49,852 -- [test_register.py-->line:75] - INFO: 用例--密码7位--执行通过
2020-03-26 22:05:50,026 -- [test_register.py-->line:75] - INFO: 用例--密码17位--执行通过
2020-03-26 22:05:50,178 -- [test_register.py-->line:75] - INFO: 用例--不输入密码--执行通过
2020-03-26 22:05:50,346 -- [test_register.py-->line:75] - INFO: 用例--注册名11位--执行通过
2020-03-26 22:05:50,525 -- [test_register.py-->line:75] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-26 22:05:50,864 -- [test_register.py-->line:75] - INFO: 用例--不输入类型--执行通过
2020-03-26 22:05:50,965 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-28 10:29:03,199 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-28 10:29:05,279 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-28 10:29:05,279 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-28 10:29:05,279 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:29:05,279 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-28 10:29:05,419 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-28 10:29:05,419 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-28 10:29:05,419 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:29:05,420 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 10:29:05,527 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-28 10:29:05,527 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-28 10:29:05,527 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:29:05,527 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 10:29:05,686 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-28 10:29:05,868 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-28 10:29:05,982 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-28 10:29:06,384 -- [test_register.py-->line:77] - INFO: 用例--注册成功-带注册名--执行通过
2020-03-28 10:29:06,697 -- [test_register.py-->line:77] - INFO: 用例--成功-不带用户名--执行通过
2020-03-28 10:29:06,804 -- [test_register.py-->line:77] - INFO: 用例--不输入手机号--执行通过
2020-03-28 10:29:06,917 -- [test_register.py-->line:77] - INFO: 用例--手机号长度10位--执行通过
2020-03-28 10:29:07,048 -- [test_register.py-->line:77] - INFO: 用例--手机号长度12位--执行通过
2020-03-28 10:29:07,173 -- [test_register.py-->line:77] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-28 10:29:07,332 -- [test_register.py-->line:77] - INFO: 用例--已注册过的手机号--执行通过
2020-03-28 10:29:07,458 -- [test_register.py-->line:77] - INFO: 用例--密码7位--执行通过
2020-03-28 10:29:07,572 -- [test_register.py-->line:77] - INFO: 用例--密码17位--执行通过
2020-03-28 10:29:07,707 -- [test_register.py-->line:77] - INFO: 用例--不输入密码--执行通过
2020-03-28 10:29:07,826 -- [test_register.py-->line:77] - INFO: 用例--注册名11位--执行通过
2020-03-28 10:29:07,940 -- [test_register.py-->line:77] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-28 10:29:08,235 -- [test_register.py-->line:77] - INFO: 用例--不输入类型--执行通过
2020-03-28 10:29:08,328 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-28 10:31:49,886 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-28 10:31:52,096 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-28 10:31:52,096 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-28 10:31:52,096 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:31:52,096 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-28 10:31:52,228 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-28 10:31:52,228 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-28 10:31:52,228 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:31:52,228 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 10:31:52,355 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-28 10:31:52,356 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-28 10:31:52,356 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:31:52,357 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 10:31:52,569 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-28 10:31:52,767 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-28 10:31:52,901 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-28 10:31:53,106 -- [test_recharge.py-->line:75] - INFO: 用例--充值成功-整数--执行通过
2020-03-28 10:31:53,276 -- [test_recharge.py-->line:75] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-28 10:31:53,398 -- [test_recharge.py-->line:75] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-28 10:31:53,535 -- [test_recharge.py-->line:75] - INFO: 用例--充值成功-50万--执行通过
2020-03-28 10:31:53,653 -- [test_recharge.py-->line:75] - INFO: 用例--会员id为空--执行通过
2020-03-28 10:31:53,779 -- [test_recharge.py-->line:75] - INFO: 用例--id不是当前登录的用户--执行通过
2020-03-28 10:31:53,922 -- [test_recharge.py-->line:67] - ERROR: 用例--会员id为字符串--执行未通过
2020-03-28 10:31:53,922 -- [test_recharge.py-->line:68] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-28 10:31:53,922 -- [test_recharge.py-->line:69] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 1517200.96, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:31:53,923 -- [test_recharge.py-->line:70] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 63, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-28 10:31:54,054 -- [test_recharge.py-->line:75] - INFO: 用例--会员id为小数--执行通过
2020-03-28 10:31:54,206 -- [test_recharge.py-->line:67] - ERROR: 用例--充值金额为0--执行未通过
2020-03-28 10:31:54,206 -- [test_recharge.py-->line:68] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-03-28 10:31:54,207 -- [test_recharge.py-->line:69] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 1517200.96, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:31:54,207 -- [test_recharge.py-->line:70] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 63, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-28 10:31:54,337 -- [test_recharge.py-->line:75] - INFO: 用例--充值金额为负数--执行通过
2020-03-28 10:31:54,459 -- [test_recharge.py-->line:67] - ERROR: 用例--充值金额为空--执行未通过
2020-03-28 10:31:54,459 -- [test_recharge.py-->line:68] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-28 10:31:54,459 -- [test_recharge.py-->line:69] - DEBUG: 实际结果：{'code': 2, 'msg': '数字格式化异常', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:31:54,459 -- [test_recharge.py-->line:70] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 63, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 10:31:54,588 -- [test_recharge.py-->line:75] - INFO: 用例--充值金额-3位小数--执行通过
2020-03-28 10:31:54,712 -- [test_recharge.py-->line:75] - INFO: 用例--充值金额-大于50万--执行通过
2020-03-28 10:31:54,830 -- [test_recharge.py-->line:75] - INFO: 用例--充值金额-非数字--执行通过
2020-03-28 10:31:55,169 -- [test_register.py-->line:77] - INFO: 用例--注册成功-带注册名--执行通过
2020-03-28 10:31:55,506 -- [test_register.py-->line:77] - INFO: 用例--成功-不带用户名--执行通过
2020-03-28 10:31:55,638 -- [test_register.py-->line:77] - INFO: 用例--不输入手机号--执行通过
2020-03-28 10:31:55,764 -- [test_register.py-->line:77] - INFO: 用例--手机号长度10位--执行通过
2020-03-28 10:31:55,875 -- [test_register.py-->line:77] - INFO: 用例--手机号长度12位--执行通过
2020-03-28 10:31:55,986 -- [test_register.py-->line:77] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-28 10:31:56,124 -- [test_register.py-->line:77] - INFO: 用例--已注册过的手机号--执行通过
2020-03-28 10:31:56,256 -- [test_register.py-->line:77] - INFO: 用例--密码7位--执行通过
2020-03-28 10:31:56,389 -- [test_register.py-->line:77] - INFO: 用例--密码17位--执行通过
2020-03-28 10:31:56,508 -- [test_register.py-->line:77] - INFO: 用例--不输入密码--执行通过
2020-03-28 10:31:56,638 -- [test_register.py-->line:77] - INFO: 用例--注册名11位--执行通过
2020-03-28 10:31:56,766 -- [test_register.py-->line:77] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-28 10:31:57,110 -- [test_register.py-->line:77] - INFO: 用例--不输入类型--执行通过
2020-03-28 10:31:57,195 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-28 10:33:24,127 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-28 10:33:26,154 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-28 10:33:26,154 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-28 10:33:26,155 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:33:26,155 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-28 10:33:26,270 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-28 10:33:26,271 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-28 10:33:26,271 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:33:26,271 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 10:33:26,393 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-28 10:33:26,393 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-28 10:33:26,394 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:33:26,394 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 10:33:26,593 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-28 10:33:26,767 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-28 10:33:26,893 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-28 10:33:27,120 -- [test_recharge.py-->line:76] - INFO: 用例--充值成功-整数--执行通过
2020-03-28 10:33:27,243 -- [test_recharge.py-->line:76] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-28 10:33:27,379 -- [test_recharge.py-->line:76] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-28 10:33:27,535 -- [test_recharge.py-->line:76] - INFO: 用例--充值成功-50万--执行通过
2020-03-28 10:33:27,643 -- [test_recharge.py-->line:76] - INFO: 用例--会员id为空--执行通过
2020-03-28 10:33:27,780 -- [test_recharge.py-->line:76] - INFO: 用例--id不是当前登录的用户--执行通过
2020-03-28 10:33:27,904 -- [test_recharge.py-->line:68] - ERROR: 用例--会员id为字符串--执行未通过
2020-03-28 10:33:27,904 -- [test_recharge.py-->line:69] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-28 10:33:27,904 -- [test_recharge.py-->line:70] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 2019601.28, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:33:27,905 -- [test_recharge.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 64, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-28 10:33:28,046 -- [test_recharge.py-->line:76] - INFO: 用例--会员id为小数--执行通过
2020-03-28 10:33:28,173 -- [test_recharge.py-->line:68] - ERROR: 用例--充值金额为0--执行未通过
2020-03-28 10:33:28,173 -- [test_recharge.py-->line:69] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-03-28 10:33:28,173 -- [test_recharge.py-->line:70] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 2019601.28, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:33:28,173 -- [test_recharge.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 64, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-28 10:33:28,309 -- [test_recharge.py-->line:76] - INFO: 用例--充值金额为负数--执行通过
2020-03-28 10:33:28,444 -- [test_recharge.py-->line:68] - ERROR: 用例--充值金额为空--执行未通过
2020-03-28 10:33:28,444 -- [test_recharge.py-->line:69] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-28 10:33:28,444 -- [test_recharge.py-->line:70] - DEBUG: 实际结果：{'code': 2, 'msg': '数字格式化异常', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:33:28,444 -- [test_recharge.py-->line:71] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 64, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 10:33:28,575 -- [test_recharge.py-->line:76] - INFO: 用例--充值金额-3位小数--执行通过
2020-03-28 10:33:28,704 -- [test_recharge.py-->line:76] - INFO: 用例--充值金额-大于50万--执行通过
2020-03-28 10:33:28,818 -- [test_recharge.py-->line:76] - INFO: 用例--充值金额-非数字--执行通过
2020-03-28 10:33:29,115 -- [test_register.py-->line:77] - INFO: 用例--注册成功-带注册名--执行通过
2020-03-28 10:33:29,426 -- [test_register.py-->line:77] - INFO: 用例--成功-不带用户名--执行通过
2020-03-28 10:33:29,548 -- [test_register.py-->line:77] - INFO: 用例--不输入手机号--执行通过
2020-03-28 10:33:29,672 -- [test_register.py-->line:77] - INFO: 用例--手机号长度10位--执行通过
2020-03-28 10:33:29,790 -- [test_register.py-->line:77] - INFO: 用例--手机号长度12位--执行通过
2020-03-28 10:33:29,913 -- [test_register.py-->line:77] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-28 10:33:30,061 -- [test_register.py-->line:77] - INFO: 用例--已注册过的手机号--执行通过
2020-03-28 10:33:30,185 -- [test_register.py-->line:77] - INFO: 用例--密码7位--执行通过
2020-03-28 10:33:30,304 -- [test_register.py-->line:77] - INFO: 用例--密码17位--执行通过
2020-03-28 10:33:30,423 -- [test_register.py-->line:77] - INFO: 用例--不输入密码--执行通过
2020-03-28 10:33:30,543 -- [test_register.py-->line:77] - INFO: 用例--注册名11位--执行通过
2020-03-28 10:33:30,674 -- [test_register.py-->line:77] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-28 10:33:30,999 -- [test_register.py-->line:77] - INFO: 用例--不输入类型--执行通过
2020-03-28 10:33:31,088 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-28 10:36:54,390 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-28 10:36:56,583 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-28 10:36:56,583 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-28 10:36:56,583 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:36:56,583 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-28 10:36:56,723 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-28 10:36:56,723 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-28 10:36:56,723 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:36:56,723 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 10:36:56,838 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-28 10:36:56,838 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-28 10:36:56,839 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:36:56,839 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 10:36:56,977 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-28 10:36:57,116 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-28 10:36:57,254 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-28 10:36:57,469 -- [test_recharge.py-->line:76] - INFO: 用例--充值成功-整数--执行通过
2020-03-28 10:36:57,589 -- [test_recharge.py-->line:76] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-28 10:36:57,723 -- [test_recharge.py-->line:76] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-28 10:36:57,879 -- [test_recharge.py-->line:76] - INFO: 用例--充值成功-50万--执行通过
2020-03-28 10:36:58,005 -- [test_recharge.py-->line:76] - INFO: 用例--会员id为空--执行通过
2020-03-28 10:36:58,133 -- [test_recharge.py-->line:76] - INFO: 用例--id不是当前登录的用户--执行通过
2020-03-28 10:36:58,273 -- [test_recharge.py-->line:68] - ERROR: 用例--会员id为字符串--执行未通过
2020-03-28 10:36:58,273 -- [test_recharge.py-->line:69] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-28 10:36:58,273 -- [test_recharge.py-->line:70] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 2522001.6, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:36:58,273 -- [test_recharge.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 64, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-28 10:36:58,421 -- [test_recharge.py-->line:76] - INFO: 用例--会员id为小数--执行通过
2020-03-28 10:36:58,570 -- [test_recharge.py-->line:68] - ERROR: 用例--充值金额为0--执行未通过
2020-03-28 10:36:58,571 -- [test_recharge.py-->line:69] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-28 10:36:58,571 -- [test_recharge.py-->line:70] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 2522001.6, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:36:58,571 -- [test_recharge.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 64, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-28 10:36:58,713 -- [test_recharge.py-->line:76] - INFO: 用例--充值金额为负数--执行通过
2020-03-28 10:36:58,837 -- [test_recharge.py-->line:68] - ERROR: 用例--充值金额为空--执行未通过
2020-03-28 10:36:58,837 -- [test_recharge.py-->line:69] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-28 10:36:58,837 -- [test_recharge.py-->line:70] - DEBUG: 实际结果：{'code': 2, 'msg': '数字格式化异常', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:36:58,837 -- [test_recharge.py-->line:71] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 64, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 10:36:58,977 -- [test_recharge.py-->line:68] - ERROR: 用例--充值金额-3位小数--执行未通过
2020-03-28 10:36:58,977 -- [test_recharge.py-->line:69] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-28 10:36:58,977 -- [test_recharge.py-->line:70] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:36:58,977 -- [test_recharge.py-->line:71] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-28 10:36:59,111 -- [test_recharge.py-->line:68] - ERROR: 用例--充值金额-大于50万--执行未通过
2020-03-28 10:36:59,111 -- [test_recharge.py-->line:69] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-28 10:36:59,111 -- [test_recharge.py-->line:70] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 10:36:59,111 -- [test_recharge.py-->line:71] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-28 10:36:59,234 -- [test_recharge.py-->line:76] - INFO: 用例--充值金额-非数字--执行通过
2020-03-28 10:36:59,572 -- [test_register.py-->line:77] - INFO: 用例--注册成功-带注册名--执行通过
2020-03-28 10:36:59,896 -- [test_register.py-->line:77] - INFO: 用例--成功-不带用户名--执行通过
2020-03-28 10:37:00,016 -- [test_register.py-->line:77] - INFO: 用例--不输入手机号--执行通过
2020-03-28 10:37:00,137 -- [test_register.py-->line:77] - INFO: 用例--手机号长度10位--执行通过
2020-03-28 10:37:00,246 -- [test_register.py-->line:77] - INFO: 用例--手机号长度12位--执行通过
2020-03-28 10:37:00,382 -- [test_register.py-->line:77] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-28 10:37:00,536 -- [test_register.py-->line:77] - INFO: 用例--已注册过的手机号--执行通过
2020-03-28 10:37:00,670 -- [test_register.py-->line:77] - INFO: 用例--密码7位--执行通过
2020-03-28 10:37:00,803 -- [test_register.py-->line:77] - INFO: 用例--密码17位--执行通过
2020-03-28 10:37:00,946 -- [test_register.py-->line:77] - INFO: 用例--不输入密码--执行通过
2020-03-28 10:37:01,079 -- [test_register.py-->line:77] - INFO: 用例--注册名11位--执行通过
2020-03-28 10:37:01,198 -- [test_register.py-->line:77] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-28 10:37:01,533 -- [test_register.py-->line:77] - INFO: 用例--不输入类型--执行通过
2020-03-28 10:37:01,610 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-28 11:05:08,664 -- [test_recharge.py-->line:84] - INFO: 用例--充值成功-整数--执行通过
2020-03-28 11:05:08,821 -- [test_recharge.py-->line:84] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-28 11:05:08,991 -- [test_recharge.py-->line:84] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-28 11:05:09,145 -- [test_recharge.py-->line:84] - INFO: 用例--充值成功-50万--执行通过
2020-03-28 11:05:09,235 -- [test_recharge.py-->line:84] - INFO: 用例--会员id为空--执行通过
2020-03-28 11:05:09,311 -- [test_recharge.py-->line:84] - INFO: 用例--id不是当前登录的用户--执行通过
2020-03-28 11:05:09,431 -- [test_recharge.py-->line:76] - ERROR: 用例--会员id为字符串--执行未通过
2020-03-28 11:05:09,431 -- [test_recharge.py-->line:77] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-28 11:05:09,431 -- [test_recharge.py-->line:78] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 4029202.56, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:05:09,431 -- [test_recharge.py-->line:79] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-03-28 11:05:09,513 -- [test_recharge.py-->line:84] - INFO: 用例--会员id为小数--执行通过
2020-03-28 11:05:09,596 -- [test_recharge.py-->line:76] - ERROR: 用例--充值金额为0--执行未通过
2020-03-28 11:05:09,597 -- [test_recharge.py-->line:77] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-28 11:05:09,597 -- [test_recharge.py-->line:78] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 4029202.56, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:05:09,597 -- [test_recharge.py-->line:79] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-03-28 11:05:09,675 -- [test_recharge.py-->line:84] - INFO: 用例--充值金额为负数--执行通过
2020-03-28 11:05:09,761 -- [test_recharge.py-->line:76] - ERROR: 用例--充值金额为空--执行未通过
2020-03-28 11:05:09,761 -- [test_recharge.py-->line:77] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-28 11:05:09,761 -- [test_recharge.py-->line:78] - DEBUG: 实际结果：{'code': 2, 'msg': '数字格式化异常', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:05:09,761 -- [test_recharge.py-->line:79] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2020-03-28 11:05:09,861 -- [test_recharge.py-->line:76] - ERROR: 用例--充值金额-3位小数--执行未通过
2020-03-28 11:05:09,861 -- [test_recharge.py-->line:77] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-28 11:05:09,862 -- [test_recharge.py-->line:78] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:05:09,862 -- [test_recharge.py-->line:79] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-03-28 11:05:09,950 -- [test_recharge.py-->line:76] - ERROR: 用例--充值金额-大于50万--执行未通过
2020-03-28 11:05:09,950 -- [test_recharge.py-->line:77] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-28 11:05:09,950 -- [test_recharge.py-->line:78] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:05:09,950 -- [test_recharge.py-->line:79] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-03-28 11:05:10,028 -- [test_recharge.py-->line:84] - INFO: 用例--充值金额-非数字--执行通过
2020-03-28 11:05:16,643 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-28 11:05:18,757 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-28 11:05:18,757 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-28 11:05:18,758 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:05:18,758 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-28 11:05:18,856 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-28 11:05:18,857 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-28 11:05:18,857 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:05:18,857 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:05:18,935 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-28 11:05:18,935 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-28 11:05:18,935 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:05:18,936 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:05:19,061 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-28 11:05:19,204 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-28 11:05:19,303 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-28 11:05:19,543 -- [test_recharge.py-->line:84] - INFO: 用例--充值成功-整数--执行通过
2020-03-28 11:05:19,689 -- [test_recharge.py-->line:84] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-28 11:05:19,853 -- [test_recharge.py-->line:84] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-28 11:05:20,001 -- [test_recharge.py-->line:84] - INFO: 用例--充值成功-50万--执行通过
2020-03-28 11:05:20,076 -- [test_recharge.py-->line:84] - INFO: 用例--会员id为空--执行通过
2020-03-28 11:05:20,157 -- [test_recharge.py-->line:84] - INFO: 用例--id不是当前登录的用户--执行通过
2020-03-28 11:05:20,252 -- [test_recharge.py-->line:76] - ERROR: 用例--会员id为字符串--执行未通过
2020-03-28 11:05:20,252 -- [test_recharge.py-->line:77] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-28 11:05:20,252 -- [test_recharge.py-->line:78] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 4531602.88, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:05:20,252 -- [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-28 11:05:20,341 -- [test_recharge.py-->line:84] - INFO: 用例--会员id为小数--执行通过
2020-03-28 11:05:20,433 -- [test_recharge.py-->line:76] - ERROR: 用例--充值金额为0--执行未通过
2020-03-28 11:05:20,434 -- [test_recharge.py-->line:77] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-28 11:05:20,434 -- [test_recharge.py-->line:78] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 4531602.88, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:05:20,434 -- [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-28 11:05:20,515 -- [test_recharge.py-->line:84] - INFO: 用例--充值金额为负数--执行通过
2020-03-28 11:05:20,594 -- [test_recharge.py-->line:76] - ERROR: 用例--充值金额为空--执行未通过
2020-03-28 11:05:20,594 -- [test_recharge.py-->line:77] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-28 11:05:20,595 -- [test_recharge.py-->line:78] - DEBUG: 实际结果：{'code': 2, 'msg': '数字格式化异常', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:05:20,595 -- [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:05:20,685 -- [test_recharge.py-->line:76] - ERROR: 用例--充值金额-3位小数--执行未通过
2020-03-28 11:05:20,685 -- [test_recharge.py-->line:77] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-28 11:05:20,685 -- [test_recharge.py-->line:78] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:05:20,686 -- [test_recharge.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-28 11:05:20,768 -- [test_recharge.py-->line:76] - ERROR: 用例--充值金额-大于50万--执行未通过
2020-03-28 11:05:20,768 -- [test_recharge.py-->line:77] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-28 11:05:20,768 -- [test_recharge.py-->line:78] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:05:20,769 -- [test_recharge.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-28 11:05:20,856 -- [test_recharge.py-->line:84] - INFO: 用例--充值金额-非数字--执行通过
2020-03-28 11:05:21,118 -- [test_register.py-->line:77] - INFO: 用例--注册成功-带注册名--执行通过
2020-03-28 11:05:21,397 -- [test_register.py-->line:77] - INFO: 用例--成功-不带用户名--执行通过
2020-03-28 11:05:21,493 -- [test_register.py-->line:77] - INFO: 用例--不输入手机号--执行通过
2020-03-28 11:05:21,568 -- [test_register.py-->line:77] - INFO: 用例--手机号长度10位--执行通过
2020-03-28 11:05:21,661 -- [test_register.py-->line:77] - INFO: 用例--手机号长度12位--执行通过
2020-03-28 11:05:21,741 -- [test_register.py-->line:77] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-28 11:05:21,870 -- [test_register.py-->line:77] - INFO: 用例--已注册过的手机号--执行通过
2020-03-28 11:05:21,964 -- [test_register.py-->line:77] - INFO: 用例--密码7位--执行通过
2020-03-28 11:05:22,036 -- [test_register.py-->line:77] - INFO: 用例--密码17位--执行通过
2020-03-28 11:05:22,132 -- [test_register.py-->line:77] - INFO: 用例--不输入密码--执行通过
2020-03-28 11:05:22,211 -- [test_register.py-->line:77] - INFO: 用例--注册名11位--执行通过
2020-03-28 11:05:22,299 -- [test_register.py-->line:77] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-28 11:05:22,568 -- [test_register.py-->line:77] - INFO: 用例--不输入类型--执行通过
2020-03-28 11:05:22,631 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-28 11:05:49,561 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-28 11:05:51,249 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-28 11:05:51,249 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-28 11:05:51,250 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:05:51,250 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-28 11:05:51,451 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-28 11:05:51,451 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-28 11:05:51,452 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:05:51,452 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:05:51,646 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-28 11:05:51,646 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-28 11:05:51,646 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:05:51,647 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:05:51,861 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-28 11:05:52,067 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-28 11:05:52,261 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-28 11:13:15,715 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-28 11:13:17,914 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-28 11:13:17,914 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-28 11:13:17,914 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:13:17,914 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-28 11:13:17,995 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-28 11:13:17,996 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-28 11:13:17,996 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:13:17,996 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:13:18,077 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-28 11:13:18,077 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-28 11:13:18,077 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:13:18,077 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:13:18,185 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-28 11:13:18,339 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-28 11:13:18,423 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-28 11:13:19,247 -- [test_recharge.py-->line:96] - INFO: 用例--会员id为空--执行通过
2020-03-28 11:13:19,338 -- [test_recharge.py-->line:96] - INFO: 用例--id不是当前登录的用户--执行通过
2020-03-28 11:13:19,431 -- [test_recharge.py-->line:88] - ERROR: 用例--会员id为字符串--执行未通过
2020-03-28 11:13:19,431 -- [test_recharge.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-28 11:13:19,431 -- [test_recharge.py-->line:90] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 5034003.2, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:13:19,431 -- [test_recharge.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-28 11:13:19,536 -- [test_recharge.py-->line:96] - INFO: 用例--会员id为小数--执行通过
2020-03-28 11:13:19,623 -- [test_recharge.py-->line:88] - ERROR: 用例--充值金额为0--执行未通过
2020-03-28 11:13:19,623 -- [test_recharge.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-28 11:13:19,624 -- [test_recharge.py-->line:90] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 5034003.2, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:13:19,624 -- [test_recharge.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-28 11:13:19,711 -- [test_recharge.py-->line:96] - INFO: 用例--充值金额为负数--执行通过
2020-03-28 11:13:19,785 -- [test_recharge.py-->line:88] - ERROR: 用例--充值金额为空--执行未通过
2020-03-28 11:13:19,785 -- [test_recharge.py-->line:89] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-28 11:13:19,785 -- [test_recharge.py-->line:90] - DEBUG: 实际结果：{'code': 2, 'msg': '数字格式化异常', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:13:19,785 -- [test_recharge.py-->line:91] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:13:19,886 -- [test_recharge.py-->line:88] - ERROR: 用例--充值金额-3位小数--执行未通过
2020-03-28 11:13:19,886 -- [test_recharge.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-28 11:13:19,886 -- [test_recharge.py-->line:90] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:13:19,886 -- [test_recharge.py-->line:91] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-28 11:13:19,962 -- [test_recharge.py-->line:88] - ERROR: 用例--充值金额-大于50万--执行未通过
2020-03-28 11:13:19,962 -- [test_recharge.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-28 11:13:19,962 -- [test_recharge.py-->line:90] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:13:19,962 -- [test_recharge.py-->line:91] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-28 11:13:20,054 -- [test_recharge.py-->line:96] - INFO: 用例--充值金额-非数字--执行通过
2020-03-28 11:13:20,361 -- [test_register.py-->line:77] - INFO: 用例--注册成功-带注册名--执行通过
2020-03-28 11:13:20,668 -- [test_register.py-->line:77] - INFO: 用例--成功-不带用户名--执行通过
2020-03-28 11:13:20,751 -- [test_register.py-->line:77] - INFO: 用例--不输入手机号--执行通过
2020-03-28 11:13:20,853 -- [test_register.py-->line:77] - INFO: 用例--手机号长度10位--执行通过
2020-03-28 11:13:20,949 -- [test_register.py-->line:77] - INFO: 用例--手机号长度12位--执行通过
2020-03-28 11:13:21,030 -- [test_register.py-->line:77] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-28 11:13:21,159 -- [test_register.py-->line:77] - INFO: 用例--已注册过的手机号--执行通过
2020-03-28 11:13:21,251 -- [test_register.py-->line:77] - INFO: 用例--密码7位--执行通过
2020-03-28 11:13:21,354 -- [test_register.py-->line:77] - INFO: 用例--密码17位--执行通过
2020-03-28 11:13:21,449 -- [test_register.py-->line:77] - INFO: 用例--不输入密码--执行通过
2020-03-28 11:13:21,543 -- [test_register.py-->line:77] - INFO: 用例--注册名11位--执行通过
2020-03-28 11:13:21,631 -- [test_register.py-->line:77] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-28 11:13:21,944 -- [test_register.py-->line:77] - INFO: 用例--不输入类型--执行通过
2020-03-28 11:13:21,989 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-28 11:13:32,205 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-28 11:13:34,333 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-28 11:13:34,333 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-28 11:13:34,334 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:13:34,334 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-28 11:13:34,474 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-28 11:13:34,474 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-28 11:13:34,474 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:13:34,474 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:13:34,598 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-28 11:13:34,598 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-28 11:13:34,599 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:13:34,599 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:13:34,755 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-28 11:13:34,939 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-28 11:13:35,054 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-28 11:13:35,833 -- [test_recharge.py-->line:96] - INFO: 用例--会员id为空--执行通过
2020-03-28 11:13:35,958 -- [test_recharge.py-->line:96] - INFO: 用例--id不是当前登录的用户--执行通过
2020-03-28 11:13:36,095 -- [test_recharge.py-->line:88] - ERROR: 用例--会员id为字符串--执行未通过
2020-03-28 11:13:36,095 -- [test_recharge.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-28 11:13:36,095 -- [test_recharge.py-->line:90] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 5536403.52, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:13:36,095 -- [test_recharge.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-28 11:13:36,282 -- [test_recharge.py-->line:96] - INFO: 用例--会员id为小数--执行通过
2020-03-28 11:13:36,397 -- [test_recharge.py-->line:88] - ERROR: 用例--充值金额为0--执行未通过
2020-03-28 11:13:36,397 -- [test_recharge.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-28 11:13:36,397 -- [test_recharge.py-->line:90] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 5536403.52, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:13:36,398 -- [test_recharge.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-28 11:13:36,519 -- [test_recharge.py-->line:96] - INFO: 用例--充值金额为负数--执行通过
2020-03-28 11:13:36,631 -- [test_recharge.py-->line:88] - ERROR: 用例--充值金额为空--执行未通过
2020-03-28 11:13:36,631 -- [test_recharge.py-->line:89] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-28 11:13:36,631 -- [test_recharge.py-->line:90] - DEBUG: 实际结果：{'code': 2, 'msg': '数字格式化异常', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:13:36,631 -- [test_recharge.py-->line:91] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:13:36,766 -- [test_recharge.py-->line:88] - ERROR: 用例--充值金额-3位小数--执行未通过
2020-03-28 11:13:36,766 -- [test_recharge.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-28 11:13:36,766 -- [test_recharge.py-->line:90] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:13:36,766 -- [test_recharge.py-->line:91] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-28 11:13:36,900 -- [test_recharge.py-->line:88] - ERROR: 用例--充值金额-大于50万--执行未通过
2020-03-28 11:13:36,900 -- [test_recharge.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-28 11:13:36,900 -- [test_recharge.py-->line:90] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:13:36,901 -- [test_recharge.py-->line:91] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-28 11:13:37,025 -- [test_recharge.py-->line:96] - INFO: 用例--充值金额-非数字--执行通过
2020-03-28 11:13:37,332 -- [test_register.py-->line:77] - INFO: 用例--注册成功-带注册名--执行通过
2020-03-28 11:13:37,644 -- [test_register.py-->line:77] - INFO: 用例--成功-不带用户名--执行通过
2020-03-28 11:13:37,754 -- [test_register.py-->line:77] - INFO: 用例--不输入手机号--执行通过
2020-03-28 11:13:37,881 -- [test_register.py-->line:77] - INFO: 用例--手机号长度10位--执行通过
2020-03-28 11:13:37,995 -- [test_register.py-->line:77] - INFO: 用例--手机号长度12位--执行通过
2020-03-28 11:13:38,120 -- [test_register.py-->line:77] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-28 11:13:38,284 -- [test_register.py-->line:77] - INFO: 用例--已注册过的手机号--执行通过
2020-03-28 11:13:38,413 -- [test_register.py-->line:77] - INFO: 用例--密码7位--执行通过
2020-03-28 11:13:38,537 -- [test_register.py-->line:77] - INFO: 用例--密码17位--执行通过
2020-03-28 11:13:38,652 -- [test_register.py-->line:77] - INFO: 用例--不输入密码--执行通过
2020-03-28 11:13:38,778 -- [test_register.py-->line:77] - INFO: 用例--注册名11位--执行通过
2020-03-28 11:13:38,929 -- [test_register.py-->line:77] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-28 11:13:39,282 -- [test_register.py-->line:77] - INFO: 用例--不输入类型--执行通过
2020-03-28 11:13:39,378 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-28 11:16:46,806 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-28 11:16:49,030 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-28 11:16:49,030 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-28 11:16:49,030 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:16:49,030 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-28 11:16:49,187 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-28 11:16:49,187 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-28 11:16:49,187 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:16:49,187 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:16:49,325 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-28 11:16:49,326 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-28 11:16:49,326 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:16:49,326 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:16:49,554 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-28 11:16:49,755 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-28 11:16:49,886 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-28 11:16:50,222 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-整数--执行通过
2020-03-28 11:16:50,467 -- [test_recharge.py-->line:86] - ERROR: 用例--充值成功-1位小数--执行未通过
2020-03-28 11:16:50,467 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-28 11:16:50,467 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 5537603.62, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:16:50,467 -- [test_recharge.py-->line:89] - ERROR: 600.1 != Decimal('600.10')
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(data["amount"],end_money-start_money)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.1 != Decimal('600.10')
2020-03-28 11:16:50,694 -- [test_recharge.py-->line:86] - ERROR: 用例--充值成功-2位小数--执行未通过
2020-03-28 11:16:50,694 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-28 11:16:50,695 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 5538203.84, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:16:50,695 -- [test_recharge.py-->line:89] - ERROR: 600.22 != Decimal('600.22')
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(data["amount"],end_money-start_money)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.22 != Decimal('600.22')
2020-03-28 11:16:50,931 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-50万--执行通过
2020-03-28 11:16:51,080 -- [test_recharge.py-->line:94] - INFO: 用例--会员id为空--执行通过
2020-03-28 11:16:51,225 -- [test_recharge.py-->line:94] - INFO: 用例--id不是当前登录的用户--执行通过
2020-03-28 11:16:51,392 -- [test_recharge.py-->line:86] - ERROR: 用例--会员id为字符串--执行未通过
2020-03-28 11:16:51,392 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-28 11:16:51,393 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 6038803.84, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:16:51,393 -- [test_recharge.py-->line:89] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-28 11:16:51,547 -- [test_recharge.py-->line:94] - INFO: 用例--会员id为小数--执行通过
2020-03-28 11:16:51,685 -- [test_recharge.py-->line:86] - ERROR: 用例--充值金额为0--执行未通过
2020-03-28 11:16:51,685 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-28 11:16:51,685 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 6038803.84, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:16:51,685 -- [test_recharge.py-->line:89] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-28 11:16:51,840 -- [test_recharge.py-->line:94] - INFO: 用例--充值金额为负数--执行通过
2020-03-28 11:16:51,965 -- [test_recharge.py-->line:86] - ERROR: 用例--充值金额为空--执行未通过
2020-03-28 11:16:51,965 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-28 11:16:51,965 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 2, 'msg': '数字格式化异常', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:16:51,965 -- [test_recharge.py-->line:89] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:16:52,085 -- [test_recharge.py-->line:86] - ERROR: 用例--充值金额-3位小数--执行未通过
2020-03-28 11:16:52,085 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-28 11:16:52,085 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:16:52,086 -- [test_recharge.py-->line:89] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-28 11:16:52,211 -- [test_recharge.py-->line:86] - ERROR: 用例--充值金额-大于50万--执行未通过
2020-03-28 11:16:52,211 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-28 11:16:52,211 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:16:52,211 -- [test_recharge.py-->line:89] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-28 11:16:52,348 -- [test_recharge.py-->line:94] - INFO: 用例--充值金额-非数字--执行通过
2020-03-28 11:16:52,666 -- [test_register.py-->line:77] - INFO: 用例--注册成功-带注册名--执行通过
2020-03-28 11:16:52,974 -- [test_register.py-->line:77] - INFO: 用例--成功-不带用户名--执行通过
2020-03-28 11:16:53,097 -- [test_register.py-->line:77] - INFO: 用例--不输入手机号--执行通过
2020-03-28 11:16:53,252 -- [test_register.py-->line:77] - INFO: 用例--手机号长度10位--执行通过
2020-03-28 11:16:53,377 -- [test_register.py-->line:77] - INFO: 用例--手机号长度12位--执行通过
2020-03-28 11:16:53,495 -- [test_register.py-->line:77] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-28 11:16:53,647 -- [test_register.py-->line:77] - INFO: 用例--已注册过的手机号--执行通过
2020-03-28 11:16:53,777 -- [test_register.py-->line:77] - INFO: 用例--密码7位--执行通过
2020-03-28 11:16:53,891 -- [test_register.py-->line:77] - INFO: 用例--密码17位--执行通过
2020-03-28 11:16:54,003 -- [test_register.py-->line:77] - INFO: 用例--不输入密码--执行通过
2020-03-28 11:16:54,141 -- [test_register.py-->line:77] - INFO: 用例--注册名11位--执行通过
2020-03-28 11:16:54,261 -- [test_register.py-->line:77] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-28 11:16:54,567 -- [test_register.py-->line:77] - INFO: 用例--不输入类型--执行通过
2020-03-28 11:16:54,649 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-28 11:29:08,843 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-28 11:29:11,451 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-28 11:29:11,451 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-28 11:29:11,451 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:29:11,452 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-28 11:29:11,624 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-28 11:29:11,624 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-28 11:29:11,624 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:29:11,624 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:29:11,786 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-28 11:29:11,787 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-28 11:29:11,787 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:29:11,787 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:29:11,990 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-28 11:29:12,194 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-28 11:29:12,311 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-28 11:29:12,655 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-整数--执行通过
2020-03-28 11:29:12,908 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-28 11:29:13,151 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-28 11:29:13,385 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-50万--执行通过
2020-03-28 11:29:13,513 -- [test_recharge.py-->line:97] - INFO: 用例--会员id为空--执行通过
2020-03-28 11:29:13,649 -- [test_recharge.py-->line:97] - INFO: 用例--id不是当前登录的用户--执行通过
2020-03-28 11:29:13,780 -- [test_recharge.py-->line:89] - ERROR: 用例--会员id为字符串--执行未通过
2020-03-28 11:29:13,780 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-28 11:29:13,780 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 6541204.16, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:29:13,780 -- [test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-28 11:29:13,922 -- [test_recharge.py-->line:97] - INFO: 用例--会员id为小数--执行通过
2020-03-28 11:29:14,092 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额为0--执行未通过
2020-03-28 11:29:14,093 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-28 11:29:14,093 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 6541204.16, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:29:14,093 -- [test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-28 11:29:14,277 -- [test_recharge.py-->line:97] - INFO: 用例--充值金额为负数--执行通过
2020-03-28 11:29:14,432 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额为空--执行未通过
2020-03-28 11:29:14,432 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-28 11:29:14,432 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '数字格式化异常', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:29:14,433 -- [test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:29:14,558 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额-3位小数--执行未通过
2020-03-28 11:29:14,558 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-28 11:29:14,558 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:29:14,558 -- [test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-28 11:29:14,697 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额-大于50万--执行未通过
2020-03-28 11:29:14,697 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-28 11:29:14,697 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:29:14,697 -- [test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-28 11:29:14,834 -- [test_recharge.py-->line:97] - INFO: 用例--充值金额-非数字--执行通过
2020-03-28 11:29:15,147 -- [test_register.py-->line:77] - INFO: 用例--注册成功-带注册名--执行通过
2020-03-28 11:29:15,446 -- [test_register.py-->line:77] - INFO: 用例--成功-不带用户名--执行通过
2020-03-28 11:29:15,595 -- [test_register.py-->line:77] - INFO: 用例--不输入手机号--执行通过
2020-03-28 11:29:15,711 -- [test_register.py-->line:77] - INFO: 用例--手机号长度10位--执行通过
2020-03-28 11:29:15,817 -- [test_register.py-->line:77] - INFO: 用例--手机号长度12位--执行通过
2020-03-28 11:29:15,957 -- [test_register.py-->line:77] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-28 11:29:16,107 -- [test_register.py-->line:77] - INFO: 用例--已注册过的手机号--执行通过
2020-03-28 11:29:16,241 -- [test_register.py-->line:77] - INFO: 用例--密码7位--执行通过
2020-03-28 11:29:16,378 -- [test_register.py-->line:77] - INFO: 用例--密码17位--执行通过
2020-03-28 11:29:16,537 -- [test_register.py-->line:77] - INFO: 用例--不输入密码--执行通过
2020-03-28 11:29:16,690 -- [test_register.py-->line:77] - INFO: 用例--注册名11位--执行通过
2020-03-28 11:29:16,824 -- [test_register.py-->line:77] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-28 11:29:17,152 -- [test_register.py-->line:77] - INFO: 用例--不输入类型--执行通过
2020-03-28 11:29:17,239 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-28 11:30:31,618 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-28 11:30:33,815 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-28 11:30:33,816 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-28 11:30:33,816 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:30:33,816 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-28 11:30:33,974 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-28 11:30:33,975 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-28 11:30:33,975 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:30:33,975 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:30:34,107 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-28 11:30:34,107 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-28 11:30:34,108 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:30:34,108 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:30:34,270 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-28 11:30:34,442 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-28 11:30:34,590 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-28 11:30:34,931 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-整数--执行通过
2020-03-28 11:30:35,181 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-28 11:30:35,423 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-28 11:30:35,660 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-50万--执行通过
2020-03-28 11:30:35,792 -- [test_recharge.py-->line:97] - INFO: 用例--会员id为空--执行通过
2020-03-28 11:30:35,946 -- [test_recharge.py-->line:97] - INFO: 用例--id不是当前登录的用户--执行通过
2020-03-28 11:30:36,089 -- [test_recharge.py-->line:89] - ERROR: 用例--会员id为字符串--执行未通过
2020-03-28 11:30:36,089 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-28 11:30:36,089 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 7043604.48, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:30:36,089 -- [test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-28 11:30:36,236 -- [test_recharge.py-->line:97] - INFO: 用例--会员id为小数--执行通过
2020-03-28 11:30:36,391 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额为0--执行未通过
2020-03-28 11:30:36,391 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-28 11:30:36,391 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 7043604.48, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:30:36,391 -- [test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-28 11:30:36,523 -- [test_recharge.py-->line:97] - INFO: 用例--充值金额为负数--执行通过
2020-03-28 11:30:36,643 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额为空--执行未通过
2020-03-28 11:30:36,644 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-28 11:30:36,644 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '数字格式化异常', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:30:36,644 -- [test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-28 11:30:36,775 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额-3位小数--执行未通过
2020-03-28 11:30:36,776 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-28 11:30:36,776 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:30:36,776 -- [test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-28 11:30:36,913 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额-大于50万--执行未通过
2020-03-28 11:30:36,913 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-28 11:30:36,913 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-28 11:30:36,913 -- [test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-28 11:30:37,044 -- [test_recharge.py-->line:97] - INFO: 用例--充值金额-非数字--执行通过
2020-03-28 11:30:37,388 -- [test_register.py-->line:77] - INFO: 用例--注册成功-带注册名--执行通过
2020-03-28 11:30:37,718 -- [test_register.py-->line:77] - INFO: 用例--成功-不带用户名--执行通过
2020-03-28 11:30:37,856 -- [test_register.py-->line:77] - INFO: 用例--不输入手机号--执行通过
2020-03-28 11:30:37,984 -- [test_register.py-->line:77] - INFO: 用例--手机号长度10位--执行通过
2020-03-28 11:30:38,109 -- [test_register.py-->line:77] - INFO: 用例--手机号长度12位--执行通过
2020-03-28 11:30:38,231 -- [test_register.py-->line:77] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-28 11:30:38,409 -- [test_register.py-->line:77] - INFO: 用例--已注册过的手机号--执行通过
2020-03-28 11:30:38,520 -- [test_register.py-->line:77] - INFO: 用例--密码7位--执行通过
2020-03-28 11:30:38,634 -- [test_register.py-->line:77] - INFO: 用例--密码17位--执行通过
2020-03-28 11:30:38,757 -- [test_register.py-->line:77] - INFO: 用例--不输入密码--执行通过
2020-03-28 11:30:38,874 -- [test_register.py-->line:77] - INFO: 用例--注册名11位--执行通过
2020-03-28 11:30:38,991 -- [test_register.py-->line:77] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-28 11:30:39,336 -- [test_register.py-->line:77] - INFO: 用例--不输入类型--执行通过
2020-03-28 11:30:39,417 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-31 13:51:08,701 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-整数--执行通过
2020-03-31 13:51:08,942 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-31 13:51:09,190 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-31 13:51:09,409 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-50万--执行通过
2020-03-31 13:51:09,512 -- [test_recharge.py-->line:97] - INFO: 用例--会员id为空--执行通过
2020-03-31 13:51:09,657 -- [test_recharge.py-->line:97] - INFO: 用例--id不是当前登录的用户--执行通过
2020-03-31 13:51:09,774 -- [test_recharge.py-->line:89] - ERROR: 用例--会员id为字符串--执行未通过
2020-03-31 13:51:09,774 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-31 13:51:09,774 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 38987547.74, 'mobile_phone': '13367899876', 'reg_name': '我是小阿迪', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 13:51:09,774 -- [test_recharge.py-->line:92] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-03-31 13:51:09,908 -- [test_recharge.py-->line:97] - INFO: 用例--会员id为小数--执行通过
2020-03-31 13:51:10,022 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额为0--执行未通过
2020-03-31 13:51:10,023 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-31 13:51:10,023 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 38987547.74, 'mobile_phone': '13367899876', 'reg_name': '我是小阿迪', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 13:51:10,024 -- [test_recharge.py-->line:92] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-03-31 13:51:10,165 -- [test_recharge.py-->line:97] - INFO: 用例--充值金额为负数--执行通过
2020-03-31 13:51:10,285 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额为空--执行未通过
2020-03-31 13:51:10,286 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-31 13:51:10,286 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '数字格式化异常', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 13:51:10,286 -- [test_recharge.py-->line:92] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2020-03-31 13:51:10,415 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额-3位小数--执行未通过
2020-03-31 13:51:10,415 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-31 13:51:10,415 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 13:51:10,415 -- [test_recharge.py-->line:92] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-03-31 13:51:10,533 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额-大于50万--执行未通过
2020-03-31 13:51:10,533 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-31 13:51:10,533 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 13:51:10,533 -- [test_recharge.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-03-31 13:51:10,661 -- [test_recharge.py-->line:97] - INFO: 用例--充值金额-非数字--执行通过
2020-03-31 20:04:42,324 -- [test_withdraw.py-->line:97] - INFO: 用例--提现成功-整数--执行通过
2020-03-31 20:04:42,455 -- [test_withdraw.py-->line:97] - INFO: 用例--提现成功-1位小数--执行通过
2020-03-31 20:04:42,567 -- [test_withdraw.py-->line:97] - INFO: 用例--提现成功-2位小数--执行通过
2020-03-31 20:04:42,694 -- [test_withdraw.py-->line:97] - INFO: 用例--提现成功-50万--执行通过
2020-03-31 20:04:42,846 -- [test_withdraw.py-->line:97] - INFO: 用例--会员id为空--执行通过
2020-03-31 20:04:42,976 -- [test_withdraw.py-->line:97] - INFO: 用例--会员id不存在--执行通过
2020-03-31 20:04:43,097 -- [test_withdraw.py-->line:89] - ERROR: 用例--会员id为字符串--执行未通过
2020-03-31 20:04:43,097 -- [test_withdraw.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-31 20:04:43,097 -- [test_withdraw.py-->line:91] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 41496749.34, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:04:43,097 -- [test_withdraw.py-->line:92] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-03-31 20:04:43,214 -- [test_withdraw.py-->line:97] - INFO: 用例--会员id为小数--执行通过
2020-03-31 20:04:43,323 -- [test_withdraw.py-->line:89] - ERROR: 用例--提现金额为0--执行未通过
2020-03-31 20:04:43,323 -- [test_withdraw.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-03-31 20:04:43,323 -- [test_withdraw.py-->line:91] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 41496749.34, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:04:43,323 -- [test_withdraw.py-->line:92] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-03-31 20:04:43,445 -- [test_withdraw.py-->line:89] - ERROR: 用例--提现金额为负数--执行未通过
2020-03-31 20:04:43,445 -- [test_withdraw.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-03-31 20:04:43,446 -- [test_withdraw.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:04:43,446 -- [test_withdraw.py-->line:92] - ERROR:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-03-31 20:04:43,578 -- [test_withdraw.py-->line:97] - INFO: 用例--提现金额为空--执行通过
2020-03-31 20:04:43,703 -- [test_withdraw.py-->line:97] - INFO: 用例--提现金额-3位小数--执行通过
2020-03-31 20:04:43,816 -- [test_withdraw.py-->line:89] - ERROR: 用例--提现金额-大于50万--执行未通过
2020-03-31 20:04:43,817 -- [test_withdraw.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-03-31 20:04:43,819 -- [test_withdraw.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:04:43,820 -- [test_withdraw.py-->line:92] - ERROR:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-03-31 20:04:43,983 -- [test_withdraw.py-->line:97] - INFO: 用例--提现金额-非数字--执行通过
2020-03-31 20:05:15,265 -- [test_withdraw.py-->line:97] - INFO: 用例--提现成功-整数--执行通过
2020-03-31 20:05:15,486 -- [test_withdraw.py-->line:97] - INFO: 用例--提现成功-1位小数--执行通过
2020-03-31 20:05:15,717 -- [test_withdraw.py-->line:97] - INFO: 用例--提现成功-2位小数--执行通过
2020-03-31 20:05:15,929 -- [test_withdraw.py-->line:97] - INFO: 用例--提现成功-50万--执行通过
2020-03-31 20:05:16,128 -- [test_withdraw.py-->line:97] - INFO: 用例--会员id为空--执行通过
2020-03-31 20:05:16,302 -- [test_withdraw.py-->line:97] - INFO: 用例--会员id不存在--执行通过
2020-03-31 20:05:16,484 -- [test_withdraw.py-->line:89] - ERROR: 用例--会员id为字符串--执行未通过
2020-03-31 20:05:16,484 -- [test_withdraw.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-31 20:05:16,484 -- [test_withdraw.py-->line:91] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 40994349.02, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:05:16,484 -- [test_withdraw.py-->line:92] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-03-31 20:05:16,674 -- [test_withdraw.py-->line:97] - INFO: 用例--会员id为小数--执行通过
2020-03-31 20:05:17,250 -- [test_withdraw.py-->line:89] - ERROR: 用例--提现金额为0--执行未通过
2020-03-31 20:05:17,250 -- [test_withdraw.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-03-31 20:05:17,250 -- [test_withdraw.py-->line:91] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 40994349.02, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:05:17,250 -- [test_withdraw.py-->line:92] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-03-31 20:05:17,434 -- [test_withdraw.py-->line:89] - ERROR: 用例--提现金额为负数--执行未通过
2020-03-31 20:05:17,434 -- [test_withdraw.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-03-31 20:05:17,434 -- [test_withdraw.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:05:17,435 -- [test_withdraw.py-->line:92] - ERROR:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-03-31 20:05:17,652 -- [test_withdraw.py-->line:97] - INFO: 用例--提现金额为空--执行通过
2020-03-31 20:05:17,831 -- [test_withdraw.py-->line:97] - INFO: 用例--提现金额-3位小数--执行通过
2020-03-31 20:05:18,021 -- [test_withdraw.py-->line:89] - ERROR: 用例--提现金额-大于50万--执行未通过
2020-03-31 20:05:18,021 -- [test_withdraw.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-03-31 20:05:18,021 -- [test_withdraw.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:05:18,021 -- [test_withdraw.py-->line:92] - ERROR:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-03-31 20:05:18,212 -- [test_withdraw.py-->line:97] - INFO: 用例--提现金额-非数字--执行通过
2020-03-31 20:40:55,597 -- [test_add.py-->line:89] - INFO: 用例--加标成功--执行通过
2020-03-31 20:40:55,802 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-03-31 20:40:56,015 -- [test_add.py-->line:89] - INFO: 用例--加标失败—标题为空--执行通过
2020-03-31 20:40:56,259 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-03-31 20:40:56,470 -- [test_add.py-->line:89] - INFO: 用例--加标失败—年利率为空--执行通过
2020-03-31 20:40:56,672 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-03-31 20:40:56,852 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-03-31 20:40:57,064 -- [test_add.py-->line:89] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-03-31 20:40:57,252 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-03-31 20:40:57,499 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-03-31 20:40:57,715 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-03-31 20:41:07,274 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-31 20:41:10,897 -- [test_add.py-->line:89] - INFO: 用例--加标成功--执行通过
2020-03-31 20:41:11,096 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-03-31 20:41:11,280 -- [test_add.py-->line:89] - INFO: 用例--加标失败—标题为空--执行通过
2020-03-31 20:41:11,443 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-03-31 20:41:11,712 -- [test_add.py-->line:89] - INFO: 用例--加标失败—年利率为空--执行通过
2020-03-31 20:41:11,946 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-03-31 20:41:12,200 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-03-31 20:41:12,423 -- [test_add.py-->line:89] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-03-31 20:41:12,612 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-03-31 20:41:12,831 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-03-31 20:41:13,040 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-03-31 20:41:13,382 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-31 20:41:13,382 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-31 20:41:13,382 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:41:13,383 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-31 20:41:13,570 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-31 20:41:13,570 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-31 20:41:13,571 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:41:13,571 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-31 20:41:13,781 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-31 20:41:13,782 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-31 20:41:13,782 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:41:13,782 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-31 20:41:14,119 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-31 20:41:14,455 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-31 20:41:14,646 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-31 20:41:15,149 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-整数--执行通过
2020-03-31 20:41:15,444 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-31 20:41:15,791 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-31 20:41:16,117 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-50万--执行通过
2020-03-31 20:41:16,304 -- [test_recharge.py-->line:97] - INFO: 用例--会员id为空--执行通过
2020-03-31 20:41:16,472 -- [test_recharge.py-->line:97] - INFO: 用例--id不是当前登录的用户--执行通过
2020-03-31 20:41:16,666 -- [test_recharge.py-->line:89] - ERROR: 用例--会员id为字符串--执行未通过
2020-03-31 20:41:16,667 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-31 20:41:16,668 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 41496749.34, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:41:16,668 -- [test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-31 20:41:16,915 -- [test_recharge.py-->line:97] - INFO: 用例--会员id为小数--执行通过
2020-03-31 20:41:17,122 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额为0--执行未通过
2020-03-31 20:41:17,123 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-31 20:41:17,123 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 41496749.34, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:41:17,124 -- [test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-31 20:41:17,340 -- [test_recharge.py-->line:97] - INFO: 用例--充值金额为负数--执行通过
2020-03-31 20:41:17,567 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额为空--执行未通过
2020-03-31 20:41:17,567 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-31 20:41:17,567 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '数字格式化异常', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:41:17,568 -- [test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-31 20:41:17,791 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额-3位小数--执行未通过
2020-03-31 20:41:17,792 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-31 20:41:17,792 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:41:17,792 -- [test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-31 20:41:18,056 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额-大于50万--执行未通过
2020-03-31 20:41:18,056 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-31 20:41:18,057 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:41:18,058 -- [test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-31 20:41:18,251 -- [test_recharge.py-->line:97] - INFO: 用例--充值金额-非数字--执行通过
2020-03-31 20:41:19,049 -- [test_register.py-->line:77] - INFO: 用例--注册成功-带注册名--执行通过
2020-03-31 20:41:19,854 -- [test_register.py-->line:77] - INFO: 用例--成功-不带用户名--执行通过
2020-03-31 20:41:20,022 -- [test_register.py-->line:77] - INFO: 用例--不输入手机号--执行通过
2020-03-31 20:41:20,223 -- [test_register.py-->line:77] - INFO: 用例--手机号长度10位--执行通过
2020-03-31 20:41:20,394 -- [test_register.py-->line:77] - INFO: 用例--手机号长度12位--执行通过
2020-03-31 20:41:20,582 -- [test_register.py-->line:77] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-31 20:41:21,007 -- [test_register.py-->line:77] - INFO: 用例--已注册过的手机号--执行通过
2020-03-31 20:41:21,183 -- [test_register.py-->line:77] - INFO: 用例--密码7位--执行通过
2020-03-31 20:41:21,400 -- [test_register.py-->line:77] - INFO: 用例--密码17位--执行通过
2020-03-31 20:41:21,576 -- [test_register.py-->line:77] - INFO: 用例--不输入密码--执行通过
2020-03-31 20:41:21,804 -- [test_register.py-->line:77] - INFO: 用例--注册名11位--执行通过
2020-03-31 20:41:22,002 -- [test_register.py-->line:77] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-31 20:41:22,873 -- [test_register.py-->line:77] - INFO: 用例--不输入类型--执行通过
2020-03-31 20:41:23,268 -- [test_withdraw.py-->line:96] - INFO: 用例--提现成功-整数--执行通过
2020-03-31 20:41:23,579 -- [test_withdraw.py-->line:96] - INFO: 用例--提现成功-1位小数--执行通过
2020-03-31 20:41:23,863 -- [test_withdraw.py-->line:96] - INFO: 用例--提现成功-2位小数--执行通过
2020-03-31 20:41:24,070 -- [test_withdraw.py-->line:96] - INFO: 用例--提现成功-50万--执行通过
2020-03-31 20:41:24,316 -- [test_withdraw.py-->line:96] - INFO: 用例--会员id为空--执行通过
2020-03-31 20:41:24,529 -- [test_withdraw.py-->line:96] - INFO: 用例--会员id不存在--执行通过
2020-03-31 20:41:24,745 -- [test_withdraw.py-->line:88] - ERROR: 用例--会员id为字符串--执行未通过
2020-03-31 20:41:24,745 -- [test_withdraw.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-31 20:41:24,745 -- [test_withdraw.py-->line:90] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 40994349.02, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:41:24,746 -- [test_withdraw.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-31 20:41:25,085 -- [test_withdraw.py-->line:96] - INFO: 用例--会员id为小数--执行通过
2020-03-31 20:41:25,333 -- [test_withdraw.py-->line:88] - ERROR: 用例--提现金额为0--执行未通过
2020-03-31 20:41:25,333 -- [test_withdraw.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-03-31 20:41:25,333 -- [test_withdraw.py-->line:90] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 40994349.02, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:41:25,333 -- [test_withdraw.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-31 20:41:25,541 -- [test_withdraw.py-->line:88] - ERROR: 用例--提现金额为负数--执行未通过
2020-03-31 20:41:25,543 -- [test_withdraw.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-03-31 20:41:25,543 -- [test_withdraw.py-->line:90] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:41:25,543 -- [test_withdraw.py-->line:91] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-03-31 20:41:25,762 -- [test_withdraw.py-->line:96] - INFO: 用例--提现金额为空--执行通过
2020-03-31 20:41:25,955 -- [test_withdraw.py-->line:96] - INFO: 用例--提现金额-3位小数--执行通过
2020-03-31 20:41:26,139 -- [test_withdraw.py-->line:88] - ERROR: 用例--提现金额-大于50万--执行未通过
2020-03-31 20:41:26,140 -- [test_withdraw.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-03-31 20:41:26,140 -- [test_withdraw.py-->line:90] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 20:41:26,140 -- [test_withdraw.py-->line:91] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-03-31 20:41:26,380 -- [test_withdraw.py-->line:96] - INFO: 用例--提现金额-非数字--执行通过
2020-03-31 20:41:26,558 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-03-31 22:02:57,001 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-03-31 22:03:01,343 -- [test_add.py-->line:89] - INFO: 用例--加标成功--执行通过
2020-03-31 22:03:01,615 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-03-31 22:03:01,865 -- [test_add.py-->line:89] - INFO: 用例--加标失败—标题为空--执行通过
2020-03-31 22:03:02,122 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-03-31 22:03:02,310 -- [test_add.py-->line:89] - INFO: 用例--加标失败—年利率为空--执行通过
2020-03-31 22:03:02,490 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-03-31 22:03:02,678 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-03-31 22:03:02,955 -- [test_add.py-->line:89] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-03-31 22:03:03,142 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-03-31 22:03:03,387 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-03-31 22:03:03,560 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-03-31 22:03:04,090 -- [test_audit.py-->line:101] - INFO: 用例--审核通过--执行通过
2020-03-31 22:03:04,329 -- [test_audit.py-->line:101] - INFO: 用例--审核不通过--执行通过
2020-03-31 22:03:04,636 -- [test_audit.py-->line:101] - INFO: 用例--参数approved_or_not为空--执行通过
2020-03-31 22:03:04,886 -- [test_audit.py-->line:101] - INFO: 用例--项目id为空--执行通过
2020-03-31 22:03:05,121 -- [test_audit.py-->line:101] - INFO: 用例--项目id不存在--执行通过
2020-03-31 22:03:05,480 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-03-31 22:03:05,480 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-31 22:03:05,480 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 22:03:05,481 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-31 22:03:05,663 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-03-31 22:03:05,663 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-31 22:03:05,664 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 22:03:05,664 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-31 22:03:05,903 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-03-31 22:03:05,903 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-31 22:03:05,903 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 22:03:05,903 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-31 22:03:06,235 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-03-31 22:03:06,577 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-03-31 22:03:06,754 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-03-31 22:03:07,105 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-整数--执行通过
2020-03-31 22:03:07,402 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-31 22:03:07,706 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-31 22:03:08,024 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-50万--执行通过
2020-03-31 22:03:08,232 -- [test_recharge.py-->line:97] - INFO: 用例--会员id为空--执行通过
2020-03-31 22:03:08,421 -- [test_recharge.py-->line:97] - INFO: 用例--id不是当前登录的用户--执行通过
2020-03-31 22:03:08,647 -- [test_recharge.py-->line:89] - ERROR: 用例--会员id为字符串--执行未通过
2020-03-31 22:03:08,647 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-31 22:03:08,648 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 41496749.34, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 22:03:08,648 -- [test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-31 22:03:08,849 -- [test_recharge.py-->line:97] - INFO: 用例--会员id为小数--执行通过
2020-03-31 22:03:09,066 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额为0--执行未通过
2020-03-31 22:03:09,066 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-31 22:03:09,066 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 41496749.34, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 22:03:09,066 -- [test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-31 22:03:09,257 -- [test_recharge.py-->line:97] - INFO: 用例--充值金额为负数--执行通过
2020-03-31 22:03:09,481 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额为空--执行未通过
2020-03-31 22:03:09,481 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-31 22:03:09,481 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '数字格式化异常', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 22:03:09,481 -- [test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-31 22:03:09,683 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额-3位小数--执行未通过
2020-03-31 22:03:09,683 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-31 22:03:09,683 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 22:03:09,683 -- [test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-31 22:03:09,889 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额-大于50万--执行未通过
2020-03-31 22:03:09,890 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-31 22:03:09,890 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 22:03:09,891 -- [test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-31 22:03:10,119 -- [test_recharge.py-->line:97] - INFO: 用例--充值金额-非数字--执行通过
2020-03-31 22:03:10,961 -- [test_register.py-->line:77] - INFO: 用例--注册成功-带注册名--执行通过
2020-03-31 22:03:11,730 -- [test_register.py-->line:77] - INFO: 用例--成功-不带用户名--执行通过
2020-03-31 22:03:11,906 -- [test_register.py-->line:77] - INFO: 用例--不输入手机号--执行通过
2020-03-31 22:03:12,116 -- [test_register.py-->line:77] - INFO: 用例--手机号长度10位--执行通过
2020-03-31 22:03:12,287 -- [test_register.py-->line:77] - INFO: 用例--手机号长度12位--执行通过
2020-03-31 22:03:12,480 -- [test_register.py-->line:77] - INFO: 用例--手机号含有非法字符--执行通过
2020-03-31 22:03:12,822 -- [test_register.py-->line:77] - INFO: 用例--已注册过的手机号--执行通过
2020-03-31 22:03:13,018 -- [test_register.py-->line:77] - INFO: 用例--密码7位--执行通过
2020-03-31 22:03:13,183 -- [test_register.py-->line:77] - INFO: 用例--密码17位--执行通过
2020-03-31 22:03:13,366 -- [test_register.py-->line:77] - INFO: 用例--不输入密码--执行通过
2020-03-31 22:03:13,636 -- [test_register.py-->line:77] - INFO: 用例--注册名11位--执行通过
2020-03-31 22:03:13,860 -- [test_register.py-->line:77] - INFO: 用例--类型输入非0，1内容--执行通过
2020-03-31 22:03:14,746 -- [test_register.py-->line:77] - INFO: 用例--不输入类型--执行通过
2020-03-31 22:03:15,181 -- [test_withdraw.py-->line:96] - INFO: 用例--提现成功-整数--执行通过
2020-03-31 22:03:15,390 -- [test_withdraw.py-->line:96] - INFO: 用例--提现成功-1位小数--执行通过
2020-03-31 22:03:15,606 -- [test_withdraw.py-->line:96] - INFO: 用例--提现成功-2位小数--执行通过
2020-03-31 22:03:15,822 -- [test_withdraw.py-->line:96] - INFO: 用例--提现成功-50万--执行通过
2020-03-31 22:03:16,015 -- [test_withdraw.py-->line:96] - INFO: 用例--会员id为空--执行通过
2020-03-31 22:03:16,234 -- [test_withdraw.py-->line:96] - INFO: 用例--会员id不存在--执行通过
2020-03-31 22:03:16,421 -- [test_withdraw.py-->line:88] - ERROR: 用例--会员id为字符串--执行未通过
2020-03-31 22:03:16,421 -- [test_withdraw.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-31 22:03:16,421 -- [test_withdraw.py-->line:90] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 40994349.02, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 22:03:16,421 -- [test_withdraw.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-31 22:03:16,604 -- [test_withdraw.py-->line:96] - INFO: 用例--会员id为小数--执行通过
2020-03-31 22:03:16,850 -- [test_withdraw.py-->line:88] - ERROR: 用例--提现金额为0--执行未通过
2020-03-31 22:03:16,851 -- [test_withdraw.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-03-31 22:03:16,851 -- [test_withdraw.py-->line:90] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 40994349.02, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 22:03:16,852 -- [test_withdraw.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-31 22:03:17,130 -- [test_withdraw.py-->line:88] - ERROR: 用例--提现金额为负数--执行未通过
2020-03-31 22:03:17,130 -- [test_withdraw.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-03-31 22:03:17,130 -- [test_withdraw.py-->line:90] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 22:03:17,130 -- [test_withdraw.py-->line:91] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-03-31 22:03:17,317 -- [test_withdraw.py-->line:96] - INFO: 用例--提现金额为空--执行通过
2020-03-31 22:03:17,568 -- [test_withdraw.py-->line:96] - INFO: 用例--提现金额-3位小数--执行通过
2020-03-31 22:03:17,790 -- [test_withdraw.py-->line:88] - ERROR: 用例--提现金额-大于50万--执行未通过
2020-03-31 22:03:17,790 -- [test_withdraw.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-03-31 22:03:17,790 -- [test_withdraw.py-->line:90] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-31 22:03:17,791 -- [test_withdraw.py-->line:91] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-03-31 22:03:18,001 -- [test_withdraw.py-->line:96] - INFO: 用例--提现金额-非数字--执行通过
2020-03-31 22:03:18,195 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-04-02 20:26:33,786 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-04-02 20:26:40,221 -- [test_add.py-->line:89] - INFO: 用例--加标成功--执行通过
2020-04-02 20:26:40,420 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-02 20:26:40,657 -- [test_add.py-->line:89] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-02 20:26:40,881 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-02 20:26:41,080 -- [test_add.py-->line:89] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-02 20:26:41,271 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-02 20:26:41,485 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-02 20:26:41,742 -- [test_add.py-->line:89] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-02 20:26:41,944 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-02 20:26:42,174 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-02 20:26:42,374 -- [test_add.py-->line:89] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-02 20:26:43,111 -- [test_audit.py-->line:121] - INFO: 用例--审核通过--执行通过
2020-04-02 20:26:43,427 -- [test_audit.py-->line:121] - INFO: 用例--审核不通过--执行通过
2020-04-02 20:26:43,673 -- [test_audit.py-->line:121] - INFO: 用例--项目不待审核状态--执行通过
2020-04-02 20:26:43,910 -- [test_audit.py-->line:121] - INFO: 用例--参数approved_or_not为空--执行通过
2020-04-02 20:26:44,170 -- [test_audit.py-->line:121] - INFO: 用例--项目id为空--执行通过
2020-04-02 20:26:44,408 -- [test_audit.py-->line:121] - INFO: 用例--项目id不存在--执行通过
2020-04-02 20:26:44,805 -- [test_login.py-->line:54] - ERROR: 用例--登录成功--执行未通过
2020-04-02 20:26:44,806 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-04-02 20:26:44,806 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-02 20:26:44,807 -- [test_login.py-->line:57] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-04-02 20:26:45,012 -- [test_login.py-->line:54] - ERROR: 用例--手机号为空--执行未通过
2020-04-02 20:26:45,012 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-02 20:26:45,012 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-02 20:26:45,012 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-02 20:26:45,244 -- [test_login.py-->line:54] - ERROR: 用例--密码为空--执行未通过
2020-04-02 20:26:45,244 -- [test_login.py-->line:55] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-02 20:26:45,244 -- [test_login.py-->line:56] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-02 20:26:45,244 -- [test_login.py-->line:57] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_login.py", line 50, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-02 20:26:45,651 -- [test_login.py-->line:62] - INFO: 用例--手机号未注册--执行通过
2020-04-02 20:26:46,033 -- [test_login.py-->line:62] - INFO: 用例--密码错误--执行通过
2020-04-02 20:26:46,214 -- [test_login.py-->line:62] - INFO: 用例--手机号格式错误--执行通过
2020-04-02 20:26:46,808 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-整数--执行通过
2020-04-02 20:26:47,248 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-02 20:26:47,607 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-02 20:26:48,103 -- [test_recharge.py-->line:97] - INFO: 用例--充值成功-50万--执行通过
2020-04-02 20:26:48,476 -- [test_recharge.py-->line:97] - INFO: 用例--会员id为空--执行通过
2020-04-02 20:26:48,697 -- [test_recharge.py-->line:97] - INFO: 用例--id不是当前登录的用户--执行通过
2020-04-02 20:26:48,929 -- [test_recharge.py-->line:89] - ERROR: 用例--会员id为字符串--执行未通过
2020-04-02 20:26:48,929 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-02 20:26:48,929 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 55429664.47, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-02 20:26:48,929 -- [test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-02 20:26:49,176 -- [test_recharge.py-->line:97] - INFO: 用例--会员id为小数--执行通过
2020-04-02 20:26:49,424 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额为0--执行未通过
2020-04-02 20:26:49,425 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-02 20:26:49,425 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 55429664.47, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-02 20:26:49,425 -- [test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-02 20:26:49,641 -- [test_recharge.py-->line:97] - INFO: 用例--充值金额为负数--执行通过
2020-04-02 20:26:49,957 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额为空--执行未通过
2020-04-02 20:26:49,958 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-02 20:26:49,958 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '数字格式化异常', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-02 20:26:49,958 -- [test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-02 20:26:50,243 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额-3位小数--执行未通过
2020-04-02 20:26:50,244 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-02 20:26:50,244 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-02 20:26:50,244 -- [test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-02 20:26:50,482 -- [test_recharge.py-->line:89] - ERROR: 用例--充值金额-大于50万--执行未通过
2020-04-02 20:26:50,482 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-02 20:26:50,482 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-02 20:26:50,482 -- [test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-02 20:26:50,683 -- [test_recharge.py-->line:97] - INFO: 用例--充值金额-非数字--执行通过
2020-04-02 20:26:51,502 -- [test_register.py-->line:77] - INFO: 用例--注册成功-带注册名--执行通过
2020-04-02 20:26:52,268 -- [test_register.py-->line:77] - INFO: 用例--成功-不带用户名--执行通过
2020-04-02 20:26:52,477 -- [test_register.py-->line:77] - INFO: 用例--不输入手机号--执行通过
2020-04-02 20:26:52,656 -- [test_register.py-->line:77] - INFO: 用例--手机号长度10位--执行通过
2020-04-02 20:26:52,940 -- [test_register.py-->line:77] - INFO: 用例--手机号长度12位--执行通过
2020-04-02 20:26:53,112 -- [test_register.py-->line:77] - INFO: 用例--手机号含有非法字符--执行通过
2020-04-02 20:26:53,515 -- [test_register.py-->line:77] - INFO: 用例--已注册过的手机号--执行通过
2020-04-02 20:26:53,718 -- [test_register.py-->line:77] - INFO: 用例--密码7位--执行通过
2020-04-02 20:26:53,936 -- [test_register.py-->line:77] - INFO: 用例--密码17位--执行通过
2020-04-02 20:26:54,140 -- [test_register.py-->line:77] - INFO: 用例--不输入密码--执行通过
2020-04-02 20:26:54,332 -- [test_register.py-->line:77] - INFO: 用例--注册名11位--执行通过
2020-04-02 20:26:54,555 -- [test_register.py-->line:77] - INFO: 用例--类型输入非0，1内容--执行通过
2020-04-02 20:26:55,330 -- [test_register.py-->line:77] - INFO: 用例--不输入类型--执行通过
2020-04-02 20:26:55,792 -- [test_withdraw.py-->line:96] - INFO: 用例--提现成功-整数--执行通过
2020-04-02 20:26:56,006 -- [test_withdraw.py-->line:96] - INFO: 用例--提现成功-1位小数--执行通过
2020-04-02 20:26:56,260 -- [test_withdraw.py-->line:96] - INFO: 用例--提现成功-2位小数--执行通过
2020-04-02 20:26:56,481 -- [test_withdraw.py-->line:96] - INFO: 用例--提现成功-50万--执行通过
2020-04-02 20:26:56,681 -- [test_withdraw.py-->line:96] - INFO: 用例--会员id为空--执行通过
2020-04-02 20:26:56,902 -- [test_withdraw.py-->line:96] - INFO: 用例--会员id不存在--执行通过
2020-04-02 20:26:57,158 -- [test_withdraw.py-->line:88] - ERROR: 用例--会员id为字符串--执行未通过
2020-04-02 20:26:57,159 -- [test_withdraw.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-02 20:26:57,159 -- [test_withdraw.py-->line:90] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 54927264.15, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-02 20:26:57,159 -- [test_withdraw.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-02 20:26:57,357 -- [test_withdraw.py-->line:96] - INFO: 用例--会员id为小数--执行通过
2020-04-02 20:26:57,577 -- [test_withdraw.py-->line:88] - ERROR: 用例--提现金额为0--执行未通过
2020-04-02 20:26:57,578 -- [test_withdraw.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-02 20:26:57,578 -- [test_withdraw.py-->line:90] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 281, 'leave_amount': 54927264.15, 'mobile_phone': '13367899876', 'reg_name': '木森667', 'reg_time': '2020-02-29 14:18:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-02 20:26:57,578 -- [test_withdraw.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-02 20:26:57,755 -- [test_withdraw.py-->line:88] - ERROR: 用例--提现金额为负数--执行未通过
2020-04-02 20:26:57,755 -- [test_withdraw.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-02 20:26:57,755 -- [test_withdraw.py-->line:90] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-02 20:26:57,755 -- [test_withdraw.py-->line:91] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-02 20:26:58,009 -- [test_withdraw.py-->line:96] - INFO: 用例--提现金额为空--执行通过
2020-04-02 20:26:58,273 -- [test_withdraw.py-->line:96] - INFO: 用例--提现金额-3位小数--执行通过
2020-04-02 20:26:58,523 -- [test_withdraw.py-->line:88] - ERROR: 用例--提现金额-大于50万--执行未通过
2020-04-02 20:26:58,524 -- [test_withdraw.py-->line:89] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-02 20:26:58,524 -- [test_withdraw.py-->line:90] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-02 20:26:58,524 -- [test_withdraw.py-->line:91] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-02 20:26:58,734 -- [test_withdraw.py-->line:96] - INFO: 用例--提现金额-非数字--执行通过
2020-04-02 20:26:58,953 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
2020-04-07 20:34:41,567 -- [test_add.py-->line:93] - INFO: 用例--加标成功--执行通过
2020-04-07 20:34:41,819 -- [test_add.py-->line:93] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-07 20:34:42,083 -- [test_add.py-->line:93] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-07 20:34:42,327 -- [test_add.py-->line:93] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-07 20:34:42,688 -- [test_add.py-->line:93] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-07 20:34:43,031 -- [test_add.py-->line:93] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-07 20:34:43,550 -- [test_add.py-->line:93] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-07 20:34:43,767 -- [test_add.py-->line:93] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-07 20:34:44,079 -- [test_add.py-->line:93] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-07 20:34:44,385 -- [test_add.py-->line:93] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-07 20:34:44,685 -- [test_add.py-->line:93] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-07 22:03:31,113 -- [test_07invest.py-->line:68] - INFO: 用例--借款人正常登录--执行通过
2020-04-07 22:03:31,267 -- [test_07invest.py-->line:68] - INFO: 用例--借款人加标--执行通过
2020-04-07 22:03:31,641 -- [test_07invest.py-->line:68] - INFO: 用例--管理员正常登录--执行通过
2020-04-07 22:03:31,810 -- [test_07invest.py-->line:68] - INFO: 用例--管理员审核--执行通过
2020-04-07 22:03:32,140 -- [test_07invest.py-->line:68] - INFO: 用例--投资人正常登录--执行通过
2020-04-07 22:03:32,313 -- [test_07invest.py-->line:68] - INFO: 用例--充值成功-整数--执行通过
2020-04-07 22:03:32,495 -- [test_07invest.py-->line:68] - INFO: 用例--投资人正常投资--执行通过
2020-04-07 22:03:32,656 -- [test_07invest.py-->line:68] - INFO: 用例--投资人id为空--执行通过
2020-04-07 22:03:32,836 -- [test_07invest.py-->line:68] - INFO: 用例--标id为空--执行通过
2020-04-07 22:03:33,079 -- [test_07invest.py-->line:68] - INFO: 用例--投资金额为空--执行通过
2020-04-09 11:30:26,334 -- [test_invest.py-->line:128] - INFO: 用例：借款人正常登录，执行通过
2020-04-09 11:30:26,503 -- [test_invest.py-->line:128] - INFO: 用例：借款人加标，执行通过
2020-04-09 11:30:26,880 -- [test_invest.py-->line:128] - INFO: 用例：管理员正常登录，执行通过
2020-04-09 11:30:27,059 -- [test_invest.py-->line:128] - INFO: 用例：管理员审核，执行通过
2020-04-09 11:30:27,222 -- [test_invest.py-->line:128] - INFO: 用例：投资人正常登录，执行通过
2020-04-09 11:30:27,399 -- [test_invest.py-->line:128] - INFO: 用例：充值成功-整数，执行通过
2020-04-09 11:30:27,585 -- [test_invest.py-->line:128] - INFO: 用例：投资人正常投资，执行通过
2020-04-09 11:30:27,760 -- [test_invest.py-->line:128] - INFO: 用例：投资人id为空，执行通过
2020-04-09 11:30:27,948 -- [test_invest.py-->line:128] - INFO: 用例：标id为空，执行通过
2020-04-09 11:30:28,143 -- [test_invest.py-->line:128] - INFO: 用例：投资金额为空，执行通过
2020-04-09 11:35:23,000 -- [test_update.py-->line:81] - INFO: 用例：正常修改昵称—用户名长度10位，执行通过
2020-04-09 11:35:23,182 -- [test_update.py-->line:76] - ERROR: 用例：修改的用户名为空，执行未通过
2020-04-09 11:35:23,182 -- [test_update.py-->line:77] - ERROR:  :: 用户不能为空 != 用户名为空
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '用户不能为空' != '用户名为空'
- 用户不能为空
?   ^^
+ 用户名为空
?   ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_update.py", line 71, in test_update
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 用户不能为空 != 用户名为空
2020-04-09 11:35:23,355 -- [test_update.py-->line:76] - ERROR: 用例：用户名长度11位，执行未通过
2020-04-09 11:35:23,356 -- [test_update.py-->line:77] - ERROR:  :: 1001 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1001 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_update.py", line 70, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1001 != 2
2020-04-09 11:35:23,540 -- [test_update.py-->line:76] - ERROR: 用例：用户id非数字类型，执行未通过
2020-04-09 11:35:23,540 -- [test_update.py-->line:77] - ERROR:  :: 1001 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1001 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_update.py", line 70, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1001 != 0
2020-04-09 11:36:18,401 -- [test_update.py-->line:81] - INFO: 用例：正常修改昵称—用户名长度10位，执行通过
2020-04-09 11:36:18,561 -- [test_update.py-->line:76] - ERROR: 用例：用户id为空，执行未通过
2020-04-09 11:36:18,562 -- [test_update.py-->line:77] - ERROR:  :: 用户id不能为空 != 用户id为空
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '用户id不能为空' != '用户id为空'
- 用户id不能为空
?     --
+ 用户id为空


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_update.py", line 71, in test_update
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 用户id不能为空 != 用户id为空
2020-04-09 11:36:18,743 -- [test_update.py-->line:76] - ERROR: 用例：修改的用户名为空，执行未通过
2020-04-09 11:36:18,743 -- [test_update.py-->line:77] - ERROR:  :: 用户不能为空 != 用户名为空
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '用户不能为空' != '用户名为空'
- 用户不能为空
?   ^^
+ 用户名为空
?   ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_update.py", line 71, in test_update
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 用户不能为空 != 用户名为空
2020-04-09 11:36:18,917 -- [test_update.py-->line:76] - ERROR: 用例：用户名长度11位，执行未通过
2020-04-09 11:36:18,917 -- [test_update.py-->line:77] - ERROR:  :: 1001 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1001 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_update.py", line 70, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1001 != 2
2020-04-09 11:36:19,104 -- [test_update.py-->line:76] - ERROR: 用例：用户id非数字类型，执行未通过
2020-04-09 11:36:19,104 -- [test_update.py-->line:77] - ERROR:  :: 1001 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1001 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_update.py", line 70, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1001 != 0
2020-04-09 11:38:12,319 -- [test_update.py-->line:81] - INFO: 用例：正常修改昵称—用户名长度10位，执行通过
2020-04-09 11:38:12,474 -- [test_update.py-->line:81] - INFO: 用例：用户id为空，执行通过
2020-04-09 11:38:12,646 -- [test_update.py-->line:76] - ERROR: 用例：修改的用户名为空，执行未通过
2020-04-09 11:38:12,646 -- [test_update.py-->line:77] - ERROR:  :: 用户为空 != 用户名为空
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '用户为空' != '用户名为空'
- 用户为空
+ 用户名为空
?   +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_update.py", line 71, in test_update
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 用户为空 != 用户名为空
2020-04-09 11:38:12,812 -- [test_update.py-->line:76] - ERROR: 用例：用户名长度11位，执行未通过
2020-04-09 11:38:12,812 -- [test_update.py-->line:77] - ERROR:  :: 1001 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1001 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_update.py", line 70, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1001 != 2
2020-04-09 11:38:12,965 -- [test_update.py-->line:76] - ERROR: 用例：用户id非数字类型，执行未通过
2020-04-09 11:38:12,965 -- [test_update.py-->line:77] - ERROR:  :: 1001 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1001 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_update.py", line 70, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1001 != 0
2020-04-09 11:41:02,704 -- [test_loans.py-->line:55] - INFO: 用例：获取成功:不填参数，执行通过
2020-04-09 11:41:02,854 -- [test_loans.py-->line:55] - INFO: 用例：获取成功:只填页面参数，执行通过
2020-04-09 11:41:03,021 -- [test_loans.py-->line:55] - INFO: 用例：获取成功:只填页面内容数，执行通过
2020-04-09 11:41:03,205 -- [test_loans.py-->line:55] - INFO: 用例：获取成功:都填参数，执行通过
2020-04-09 11:46:20,785 -- [test_info.py-->line:80] - INFO: 用例：正常获取用户信息，执行通过
2020-04-09 11:46:20,971 -- [test_info.py-->line:80] - INFO: 用例：不存在的用户id，执行通过
2020-04-09 11:48:01,453 -- [test_main_stream.py-->line:88] - INFO: 用例：管理员注册，执行通过
2020-04-09 11:48:01,790 -- [test_main_stream.py-->line:88] - INFO: 用例：管理员正常登录，执行通过
2020-04-09 11:48:01,969 -- [test_main_stream.py-->line:88] - INFO: 用例：管理员加标，执行通过
2020-04-09 11:48:02,143 -- [test_main_stream.py-->line:88] - INFO: 用例：管理员审核，执行通过
2020-04-09 11:48:02,462 -- [test_main_stream.py-->line:88] - INFO: 用例：用户注册，执行通过
2020-04-09 11:48:02,787 -- [test_main_stream.py-->line:88] - INFO: 用例：投资人正常登录，执行通过
2020-04-09 11:48:02,955 -- [test_main_stream.py-->line:88] - INFO: 用例：获取用户信息，执行通过
2020-04-09 11:48:03,109 -- [test_main_stream.py-->line:88] - INFO: 用例：更改昵称，执行通过
2020-04-09 11:48:03,288 -- [test_main_stream.py-->line:88] - INFO: 用例：充值，执行通过
2020-04-09 11:48:03,480 -- [test_main_stream.py-->line:88] - INFO: 用例：投资人正常投资，执行通过
2020-04-09 11:48:03,638 -- [test_main_stream.py-->line:88] - INFO: 用例：取现，执行通过
2020-04-09 11:48:03,830 -- [test_main_stream.py-->line:88] - INFO: 用例：获取项目列表，执行通过
2020-04-09 11:53:53,327 -- [test_loans.py-->line:54] - ERROR: 用例：获取成功:不填参数，执行未通过
2020-04-09 11:53:53,327 -- [test_loans.py-->line:55] - ERROR:  :: 20 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 20 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_loans.py", line 47, in test_loans
    self.assertEqual(expected["len"],len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 20 != 10
2020-04-09 11:53:53,481 -- [test_loans.py-->line:54] - ERROR: 用例：获取成功:只填页面参数，执行未通过
2020-04-09 11:53:53,482 -- [test_loans.py-->line:55] - ERROR:  :: 20 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 20 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_loans.py", line 47, in test_loans
    self.assertEqual(expected["len"],len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 20 != 10
2020-04-09 11:53:53,678 -- [test_loans.py-->line:54] - ERROR: 用例：获取成功:只填页面内容数，执行未通过
2020-04-09 11:53:53,678 -- [test_loans.py-->line:55] - ERROR:  :: 20 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 20 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_loans.py", line 47, in test_loans
    self.assertEqual(expected["len"],len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 20 != 10
2020-04-09 11:53:53,841 -- [test_loans.py-->line:59] - INFO: 用例：获取成功:都填参数，执行通过
2020-04-09 11:54:58,483 -- [test_loans.py-->line:59] - INFO: 用例：获取成功:不填参数，执行通过
2020-04-09 11:54:58,670 -- [test_loans.py-->line:59] - INFO: 用例：获取成功:只填页面参数，执行通过
2020-04-09 11:54:59,301 -- [test_loans.py-->line:54] - ERROR: 用例：获取成功:只填页面内容数，执行未通过
2020-04-09 11:54:59,301 -- [test_loans.py-->line:55] - ERROR:  :: 20 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 20 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_loans.py", line 47, in test_loans
    self.assertEqual(expected["len"],len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 20 != 10
2020-04-09 11:54:59,482 -- [test_loans.py-->line:54] - ERROR: 用例：获取成功:都填参数，执行未通过
2020-04-09 11:54:59,482 -- [test_loans.py-->line:55] - ERROR:  :: 20 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 20 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_loans.py", line 47, in test_loans
    self.assertEqual(expected["len"],len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 20 != 10
2020-04-09 11:57:45,625 -- [test_loans.py-->line:58] - INFO: 用例：获取成功:不填参数，执行通过
2020-04-09 11:57:45,798 -- [test_loans.py-->line:58] - INFO: 用例：获取成功:只填页面参数，执行通过
2020-04-09 11:57:45,978 -- [test_loans.py-->line:53] - ERROR: 用例：获取成功:只填页面内容数，执行未通过
2020-04-09 11:57:45,978 -- [test_loans.py-->line:54] - ERROR:  :: 20 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 20 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_loans.py", line 48, in test_loans
    self.assertEqual(expected["len"],len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 20 != 10
2020-04-09 11:57:46,144 -- [test_loans.py-->line:53] - ERROR: 用例：获取成功:都填参数，执行未通过
2020-04-09 11:57:46,144 -- [test_loans.py-->line:54] - ERROR:  :: 20 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 20 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_loans.py", line 48, in test_loans
    self.assertEqual(expected["len"],len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 20 != 10
2020-04-09 13:58:26,364 -- [test_loans.py-->line:58] - INFO: 用例：获取成功:不填参数，执行通过
2020-04-09 13:58:26,518 -- [test_loans.py-->line:58] - INFO: 用例：获取成功:只填页面参数，执行通过
2020-04-09 13:58:26,680 -- [test_loans.py-->line:53] - ERROR: 用例：获取成功:只填页面内容数，执行未通过
2020-04-09 13:58:26,680 -- [test_loans.py-->line:54] - ERROR:  :: 20 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 20 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_loans.py", line 48, in test_loans
    self.assertEqual(expected["len"],len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 20 != 10
2020-04-09 13:58:26,870 -- [test_loans.py-->line:53] - ERROR: 用例：获取成功:都填参数，执行未通过
2020-04-09 13:58:26,871 -- [test_loans.py-->line:54] - ERROR:  :: 20 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 20 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py27_class\py27_api_test\testcases\test_loans.py", line 48, in test_loans
    self.assertEqual(expected["len"],len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 20 != 10
2020-04-09 14:01:58,846 -- [test_loans.py-->line:58] - INFO: 用例：获取成功:不填参数，执行通过
2020-04-09 14:01:58,992 -- [test_loans.py-->line:58] - INFO: 用例：获取成功:只填页面参数，执行通过
2020-04-09 14:01:59,149 -- [test_loans.py-->line:58] - INFO: 用例：获取成功:只填页面内容数，执行通过
2020-04-09 14:01:59,321 -- [test_loans.py-->line:58] - INFO: 用例：获取成功:都填参数，执行通过
2020-04-11 08:49:40,387 -- [run_test.py-->line:15] - INFO: ---------------开始执行测试用例-----------------------
2020-04-11 08:50:31,092 -- [run_test.py-->line:29] - INFO: ---------------测试用例执行完毕-----------------------
